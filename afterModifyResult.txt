# JMH version: 1.21
# VM version: JDK 1.8.0_51, Java HotSpot(TM) 64-Bit Server VM, 25.51-b03
# VM invoker: C:\Program Files\Java\jre1.8.0_51\bin\java.exe
# VM options: -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 10 s each
# Measurement: 4 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: talend.shenzetestJMH.TSwooshGroupingJMHTest.execute

# Run progress: 0.00% complete, ETA 00:02:20
# Fork: 1 of 2
# Warmup Iteration   1: SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
633.143 ＼(99.9%) 36.613 ms/op
# Warmup Iteration   2: 613.664 ＼(99.9%) 8.149 ms/op
# Warmup Iteration   3: 613.849 ＼(99.9%) 7.835 ms/op
Iteration   1: 613.170 ＼(99.9%) 16.203 ms/op
                 execute，p0.00:   601.883 ms/op
                 execute，p0.50:   610.271 ms/op
                 execute，p0.90:   634.598 ms/op
                 execute，p0.95:   673.186 ms/op
                 execute，p0.99:   673.186 ms/op
                 execute，p0.999:  673.186 ms/op
                 execute，p0.9999: 673.186 ms/op
                 execute，p1.00:   673.186 ms/op

Iteration   2: 621.127 ＼(99.9%) 16.389 ms/op
                 execute，p0.00:   602.931 ms/op
                 execute，p0.50:   616.563 ms/op
                 execute，p0.90:   655.989 ms/op
                 execute，p0.95:   658.506 ms/op
                 execute，p0.99:   658.506 ms/op
                 execute，p0.999:  658.506 ms/op
                 execute，p0.9999: 658.506 ms/op
                 execute，p1.00:   658.506 ms/op

Iteration   3: 611.505 ＼(99.9%) 6.338 ms/op
                 execute，p0.00:   600.834 ms/op
                 execute，p0.50:   610.271 ms/op
                 execute，p0.90:   622.225 ms/op
                 execute，p0.95:   623.903 ms/op
                 execute，p0.99:   623.903 ms/op
                 execute，p0.999:  623.903 ms/op
                 execute，p0.9999: 623.903 ms/op
                 execute，p1.00:   623.903 ms/op

Iteration   4: 614.466 ＼(99.9%) 9.469 ms/op
                 execute，p0.00:   599.785 ms/op
                 execute，p0.50:   613.417 ms/op
                 execute，p0.90:   633.550 ms/op
                 execute，p0.95:   634.388 ms/op
                 execute，p0.99:   634.388 ms/op
                 execute，p0.999:  634.388 ms/op
                 execute，p0.9999: 634.388 ms/op
                 execute，p1.00:   634.388 ms/op


# Run progress: 50.00% complete, ETA 00:01:13
# Fork: 2 of 2
# Warmup Iteration   1: SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
631.374 ＼(99.9%) 36.048 ms/op
# Warmup Iteration   2: 612.985 ＼(99.9%) 4.596 ms/op
# Warmup Iteration   3: 613.294 ＼(99.9%) 7.683 ms/op
Iteration   1: 616.378 ＼(99.9%) 14.873 ms/op
                 execute，p0.00:   600.834 ms/op
                 execute，p0.50:   614.466 ms/op
                 execute，p0.90:   635.018 ms/op
                 execute，p0.95:   671.089 ms/op
                 execute，p0.99:   671.089 ms/op
                 execute，p0.999:  671.089 ms/op
                 execute，p0.9999: 671.089 ms/op
                 execute，p1.00:   671.089 ms/op

Iteration   2: 614.774 ＼(99.9%) 7.035 ms/op
                 execute，p0.00:   599.785 ms/op
                 execute，p0.50:   614.466 ms/op
                 execute，p0.90:   626.419 ms/op
                 execute，p0.95:   628.097 ms/op
                 execute，p0.99:   628.097 ms/op
                 execute，p0.999:  628.097 ms/op
                 execute，p0.9999: 628.097 ms/op
                 execute，p1.00:   628.097 ms/op

Iteration   3: 614.589 ＼(99.9%) 13.288 ms/op
                 execute，p0.00:   601.883 ms/op
                 execute，p0.50:   612.368 ms/op
                 execute，p0.90:   635.227 ms/op
                 execute，p0.95:   659.554 ms/op
                 execute，p0.99:   659.554 ms/op
                 execute，p0.999:  659.554 ms/op
                 execute，p0.9999: 659.554 ms/op
                 execute，p1.00:   659.554 ms/op

Iteration   4: 613.849 ＼(99.9%) 7.556 ms/op
                 execute，p0.00:   601.883 ms/op
                 execute，p0.50:   614.466 ms/op
                 execute，p0.90:   627.468 ms/op
                 execute，p0.95:   633.340 ms/op
                 execute，p0.99:   633.340 ms/op
                 execute，p0.999:  633.340 ms/op
                 execute，p0.9999: 633.340 ms/op
                 execute，p1.00:   633.340 ms/op



Result "talend.shenzetestJMH.TSwooshGroupingJMHTest.execute":
  N = 136
  mean =    614.982 ＼(99.9%) 3.566 ms/op

  Histogram, ms/op:
    [590.000, 595.000) = 0 
    [595.000, 600.000) = 2 
    [600.000, 605.000) = 17 
    [605.000, 610.000) = 25 
    [610.000, 615.000) = 40 
    [615.000, 620.000) = 27 
    [620.000, 625.000) = 9 
    [625.000, 630.000) = 7 
    [630.000, 635.000) = 3 
    [635.000, 640.000) = 0 
    [640.000, 645.000) = 1 
    [645.000, 650.000) = 0 
    [650.000, 655.000) = 0 
    [655.000, 660.000) = 3 
    [660.000, 665.000) = 0 
    [665.000, 670.000) = 0 
    [670.000, 675.000) = 2 

  Percentiles, ms/op:
      p(0.0000) =    599.785 ms/op
     p(50.0000) =    612.893 ms/op
     p(90.0000) =    626.314 ms/op
     p(95.0000) =    635.332 ms/op
     p(99.0000) =    672.410 ms/op
     p(99.9000) =    673.186 ms/op
     p(99.9900) =    673.186 ms/op
     p(99.9990) =    673.186 ms/op
     p(99.9999) =    673.186 ms/op
    p(100.0000) =    673.186 ms/op


# Run complete. Total time: 00:02:26

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                       Mode  Cnt    Score   Error  Units
shenzetestJMH.TSwooshGroupingJMHTest.execute                  sample  136  614.982 ＼ 3.566  ms/op
shenzetestJMH.TSwooshGroupingJMHTest.execute:execute，p0.00    sample       599.785          ms/op
shenzetestJMH.TSwooshGroupingJMHTest.execute:execute，p0.50    sample       612.893          ms/op
shenzetestJMH.TSwooshGroupingJMHTest.execute:execute，p0.90    sample       626.314          ms/op
shenzetestJMH.TSwooshGroupingJMHTest.execute:execute，p0.95    sample       635.332          ms/op
shenzetestJMH.TSwooshGroupingJMHTest.execute:execute，p0.99    sample       672.410          ms/op
shenzetestJMH.TSwooshGroupingJMHTest.execute:execute，p0.999   sample       673.186          ms/op
shenzetestJMH.TSwooshGroupingJMHTest.execute:execute，p0.9999  sample       673.186          ms/op
shenzetestJMH.TSwooshGroupingJMHTest.execute:execute，p1.00    sample       673.186          ms/op
