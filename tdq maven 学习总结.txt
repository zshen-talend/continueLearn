
1.pom.xml下属性详解

http://maven.apache.org/index.html帮助文档
1)modules 指定子项目
2)properties 定义属性 使用时用${变量名}的方式调用
3)dependenyes 定义依赖关系（需要声明flix插件否则依赖关系是typo通过manifest来确定）
4)package 指定大包的类型（bundle意味着打包成插件的形式.jar以为的不带manifest里的依赖）
5)configuration 这个标签下定义的都是当前插件的参数，所以要去当前插件下找解释


2.build的顺序
mvn clean install 默认找当前目录所在的pom.xml文件进行build
所以要进行当前某个plugin的build可以到这个插件的根目录下

3.mvn clean install所暗含的命令
clean 清理所有的编译文件
compile 重新生成编译文件
test  编译test类并运行test
package 打包编译文件
install 把打包好的文件部署到.m2目录下
deploy 发布jar包到网站

4.build产品的所对应的pom文件
studio-se-master 对应TOS SE
studio-ee-master 对应TOS ee

5.build jar包
mvn clean install
 -DskipTests 可以跳过test
 -Dformat 自动格式化代码
 -DTest 指定测试类
 -DskipITs 跳过集成测试
 -Dmaven.test.failure.ignore=true 测试失败也不终止

6.剔除不需要的testCase
<plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-surefire-plugin</artifactId>
	<version>2.18.1</version>
	<configuration>
		<excludes>
           		<exclude>**/*SynonymIndexBuilderTest.java</exclude>
           		<exclude>**/*SynonymIndexSearcherTest.java</exclude>
           		<exclude>**/*SynonymRecordSearcherTest.java</exclude>
         	</excludes>
		<systemPropertyVariables>
			<java.io.tmpdir>${project.build.directory}</java.io.tmpdir>
		</systemPropertyVariables>
	</configuration>
</plugin>

7.指定文件的build路径
<build>
    <directory>target</directory>
    <outputDirectory>target/classes</outputDirectory>
    <testOutputDirectory>target/test-classes</testOutputDirectory>
    <sourceDirectory>src/main/java</sourceDirectory>
    <testSourceDirectory>src/test/java</testSourceDirectory>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
      </testResource>
    </testResources>
  </build>
  
  8.talend libraries download url
  TalendLibsServerManager.TALEND_LIB_SERVER  ~https://talend-update.talend.com/nexus/
  公共nexus url ~https://artifacts-zl.talend.com/nexus
  
  9. -amd -pl dataquality-record-linkage
	-pl 指定一个modules的id列表来决定build哪些工程
	-am 是否需要同时build列表中工程依赖的工程
	-amd 是否需要同时build依赖列表中工程的工程
	
	10.拷贝依赖的jar包到指定目录下
	mvn dependency:copy-dependencies -DoutputDirectory=libs
	
	11.-Dformat的问题解决
	dataquality-libraries里面配置了format的具体插件
	net.revelc.code.formatter就是这个功能插件(这个配置文件可以从eclipse里面导出)
	configFile标签定义了样式文件的名字默认从org.talend.tools下面找（所以要保证org.talend.tools是最新的）
	net.revelc.code.formatter的解释在http://code.revelc.net/formatter-maven-plugin/examples.html
	
	12.debug打印configation信息
	mvn clean install -X可以打印maven执行过程中的信息，包括configation下面的参数和文件位置
	
	13.回退提交
	mvn reset --head HEAD^ 每个^代表一次回退
	mvn reset --head HEAD~5 代码回退5个提交
	git push --force 强制提交代码操作remote端
