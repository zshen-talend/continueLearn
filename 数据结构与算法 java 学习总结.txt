
数组:
	 插入快，如果知道下标，可以非常快的存取。
	查找慢，删除慢，大小固定。

有序数组:
	比无序数组查找快
	删除和插入慢，大小固定

栈:
	提供后进先出方式的存取
	存取其他的项很慢

队列:
	提供先进先出方式的存取
	存取其他项很慢

链表:
	插入快，删除快
	查找慢

二叉树:
	查找、插入、删除都快(如果树保持平衡)
	删除算法复杂

红-黑树:
	查找、插入、删除都快。树总是平衡的
	算法复杂

2-3-4树:
	查找、插入、删除都快。树总是平衡的类似的对磁盘的存储有用。
	算法复杂

哈希表:
	如果关键字已知则存取极快。插入快
	删除慢，如果不知道关键字则存取很慢，对存储空间使用不充分。

堆:
	插入、删除快，对最大数据项的存取很快
	对其他数据项存取慢

图:
	对现实世界建模
	有些算法慢且复杂

C++与java的区别:
	赋值:
		C++中的赋值语句是拷贝，是将一个变量的值赋给另一个变量，两个变量是不同地址。
		java中的赋值语句是引用，是直接将一个变量的地址赋给另一个变量，赋值之后只有一个变量。

java中的new操作符分配的内存地址会被java在	一段时间后自动检查，当检查到该地址已经不存在有效的引用时，系统会将这块空间归入空闲内存区。这个过程称为垃圾回收。

java中的参数传递
	java中大多用的都是经过封装的数据类型，这些类型的数据会在函数参数中以地址的形式传递，但像int这样的简单数据类型还是会以值的形式进行传递的。

java与C++的"=="的区别
	C++中的"=="可以判断两个变量的内容是否相等。
	而java中的"=="只能判断两个变量的地址是否相同，当然除了简单数据类型。

p39第二章
选择数据源
清空所有列表
生成列表错误
没有发现数据节点
正在生成数据控件列表
发现不支持的控件类型