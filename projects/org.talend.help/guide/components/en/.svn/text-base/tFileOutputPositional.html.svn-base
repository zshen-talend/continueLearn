<html><head>
      <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
   <title>tFileOutputPositional</title><meta name="generator" content="DocBook XSL-NS Stylesheets V1.76.1"><link rel="home" href="index.html" title="Talend Open Studio"><link rel="up" href="ch10.html" title="Chapter&nbsp;10.&nbsp;File components"><link rel="prev" href="tFileOutputMSXML.html" title="tFileOutputMSXML"><link rel="next" href="tFileOutputProperties.html" title="tFileOutputProperties"></head><body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF"><div lang="EN" class="section" title="tFileOutputPositional"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="tFileOutputPositional"></a>tFileOutputPositional</h2></div></div></div><div class="mediaobject"><img src="../images/tFileOutputPositional_icon32.png"></div><div class="section" title="tFileOutputPositional Properties"><div class="titlepage"><div><div><h3 class="title"><a name="d0e209906"></a>tFileOutputPositional Properties</h3></div></div></div><div class="informaltable"><table border="1"><colgroup><col class="c1"><col class="c2"><col class="c3"></colgroup><tbody><tr><td valign="top">
									<p>
										<span class="bold"><strong>Component Family</strong></span>
									</p>
								</td><td valign="top">
									<p>File/Output</p>
								</td><td valign="top">&nbsp;</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>Function</strong></span>
									</p>
								</td><td colspan="2" valign="top">
									<p><span class="bold"><strong>tFileOutputPositional</strong></span>
										writes a file row by row according to the length and the
										format of the f ields or columns in a row.</p>
								</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>Purpose</strong></span>
									</p>
								</td><td colspan="2" valign="top">
									<p>It writes a file row by row, according to the data
										structure (schema) coming from the input flow.</p>
								</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>Basic settings</strong></span>
									</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Property type</em></span>
									</p>
								</td><td valign="top">
									<p>Either Built-in or Repository. </p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p><span class="bold"><strong>Built-in</strong></span>: No property
										data stored centrally.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p><span class="bold"><strong>Repository</strong></span>: Select the
										repository file where the properties are stored. The fields
										that follow are completed automatically using the data
										retrieved.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Use Output Stream</em></span>
									</p>
								</td><td valign="top">
									<p>Select this check box process the data flow of interest.
										Once you have selected it, the <span class="bold"><strong>Output
											Stream</strong></span> field displays and you can type in the
										data flow of interest.</p>
									<p> The data flow to be processed must be added to the flow
										in order for this component to fetch these data via the
										corresponding representattive variable.</p>
									<p> This variable could be already pre-defined in your Studio
										or provided by the context or the components you are using
										along with this component; otherwise, you could define it
										manually and use it according to the design of your Job, for
										example, using <span class="bold"><strong>tJava</strong></span> or
											<span class="bold"><strong>tJavaFlex</strong></span>.</p>
									<p> In order to avoid the inconvenience of hand writing, you
										could select the variable of interest from the
										auto-completion list (<span class="bold"><strong>Ctrl+Space</strong></span>) to fill the current field on
										condition that this variable has been properly
										defined.</p>
									<p> For further information about how to use a stream, see
											<a class="xref" href="tFileInputDelimited.html#Raa47862" title="Scenario 2: Reading data from a remote file in streaming mode">the section called &#8220;Scenario 2: Reading data from a remote file in streaming mode&#8221;</a>.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>File Name</em></span>
									</p>
								</td><td valign="top">
									<p>Name or path to the file to be processed and or the
										variable to be used. </p>
									<p> This field becomes unavailable once you have selected the
											<span class="bold"><strong>Use Output Stream</strong></span> check
										box.</p>
									<p> </p>
									<p> Related topic: see <span class="bluebold">Talend Open Studio</span>
										<span class="bold"><strong>User Guide</strong></span>.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Schema </em></span>
										<span class="emphasis"><em>and </em></span>
										<span class="emphasis"><em>Edit Schema</em></span>
									</p>
								</td><td valign="top">
									<p>A schema is a row description, i.e., it defines the number
										of fields that will be processed and passed on to the next
										component. The schema is either built-in or remote in the
										Repository. </p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p><span class="bold"><strong>Built-in</strong></span>: You create and
										store the schema locally for this component only. Related
										topic: see <span class="bluebold">Talend Open Studio</span>
										<span class="bold"><strong>User Guide</strong></span>.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p><span class="bold"><strong>Repository</strong></span>: You have
										already created the schema and stored it in the Repository.
										You can reuse it in various projects and Job designs.
										Related topic: see <span class="bluebold">Talend Open Studio</span>
										<span class="bold"><strong>User Guide</strong></span>.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Row separator</em></span>
									</p>
								</td><td valign="top">
									<p>String (ex: &#8220;\n&#8221;on Unix) to distinguish rows in the output
										file.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Append</em></span>
									</p>
								</td><td valign="top">
									<p>Select this check box to add the new rows at the end of
										the file.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Include header</em></span>
									</p>
								</td><td valign="top">
									<p>Select this check box to include the column header to the
										file.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Compress as zip file</em></span>
									</p>
								</td><td valign="top">
									<p>Select this check box to compress the output file in zip
										format.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Formats</em></span>
									</p>
								</td><td valign="top">
									<p>Customize the positional file data format and fill in the
										columns in the Formats table.</p>
									<p>
										<span class="bold"><strong>Column</strong></span>: Select the column
										you want to customize.</p>
									<p>
										<span class="bold"><strong>Size</strong></span>: Enter the column
										size.</p>
									<p>
										<span class="bold"><strong>Padding char</strong></span>: Type in
										between quotes the padding characters used. A space by
										default.</p>
									<p>
										<span class="bold"><strong>Alignment</strong></span>: Select the
										appropriate alignment parameter.</p>
									<p>
										<span class="bold"><strong>Keep</strong></span>: If the data in the
										column or in the field are too long, select the part you
										want to keep.</p>
								</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>Advanced settings</strong></span>
									</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Advanced separator (for numbers)</em></span>
									</p>
								</td><td valign="top">
									<p>Select this check box to modify the separators used for
										numbers:</p>
									<p>
										<span class="bold"><strong>Thousands separator</strong></span>: define
										separators for thousands.</p>
									<p>
										<span class="bold"><strong>Decimal separator</strong></span>: define
										separators for decimals.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Use byte length as the cardinality</em></span>
									</p>
								</td><td valign="top">
									<p>Select this checkbox to add support of double-byte
										character to this component. JDK 1.6 is required for this
										feature.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Create directory if not exists</em></span>
									</p>
								</td><td valign="top">
									<p>This check box is selected by default. It creates a
										directory to hold the output table if it does not
										exist.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Custom the flush buffer size</em></span>
									</p>
								</td><td valign="top">
									<p>Select this check box to define the number of lines to
										write before emptying the buffer.</p>
									<p>
										<span class="bold"><strong>Row Number</strong></span>: set the number
										of lines to write.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Output in row mode</em></span>
									</p>
								</td><td valign="top">
									<p>Writes in row mode.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Encoding</em></span>
									</p>
								</td><td valign="top">
									<p>Select the encoding type from the list or select <span class="bold"><strong>Custom</strong></span> and define it manually.
										This field is compulsory for DB data handling.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Don&#8217;t generate empty file</em></span>
									</p>
								</td><td valign="top">
									<p>Select this check box if you do not want to generate empty
										files.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>tStatCatcher Statistics</em></span>
									</p>
								</td><td valign="top">
									<p>Select this check box to gather the Job processing
										metadata at a Job level as well as at each component
										level.</p>
								</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>Usage</strong></span>
									</p>
								</td><td colspan="2" valign="top">
									<p>Use this component to read a file and separate the fields
										using the specified separator.</p>
								</td></tr></tbody></table></div></div><div class="section" title="Related scenario"><div class="titlepage"><div><div><h3 class="title"><a name="d0e210491"></a>Related scenario</h3></div></div></div><p>For a related scenario, see <a class="xref" href="tFileInputPositional.html#Raa50077" title="Scenario: From Positional to XML file">the section called &#8220;Scenario: From Positional to XML file&#8221;</a>;</p><p>For scenario about the usage of <span class="bold"><strong>Use Output
						Stream</strong></span> check box, see <a class="xref" href="tFileOutputDelimited.html#fhan-20111017-file_tfileoutputdelimited_sce2" title="Scenario: Utilizing Output Stream in saving filtered data to a local file">the section called &#8220;Scenario: Utilizing Output Stream in saving filtered data to a local
					file&#8221;</a>.</p></div></div></body></html>