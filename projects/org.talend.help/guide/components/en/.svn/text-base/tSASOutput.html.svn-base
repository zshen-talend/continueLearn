<html><head>
      <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
   <title>tSASOutput</title><meta name="generator" content="DocBook XSL-NS Stylesheets V1.76.1"><link rel="home" href="index.html" title="Talend Open Studio"><link rel="up" href="Raa29876.html" title="Chapter&nbsp;6.&nbsp;Database components"><link rel="prev" href="tSASInput.html" title="tSASInput"><link rel="next" href="tSQLiteClose.html" title="tSQLiteClose"></head><body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF"><div lang="EN" class="section" title="tSASOutput"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="tSASOutput"></a>tSASOutput</h2></div></div></div><div class="mediaobject"><img src="../images/tSasOutput_icon32_white.png"></div><div class="warning" title="Warning" style="margin-left: 0.5in; margin-right: 0.5in;"><table border="0" summary="Warning"><tr><td rowspan="2" align="center" valign="top" width="16pt"><img alt="[Warning]" src="../images/warning.png"></td><th align="left"></th></tr><tr><td align="left" valign="top"><p>
					<span class="italic"> Before being able to benefit from all functional
						objectives of the SAS components, make sure to install the following three
						modules: sas.core.jar, sas.intrnet.javatools.jar and sas.svc.connection.jar
						in the path lib &gt; java in your <span class="bluebold">
							Talend Open Studio
						</span> directory. You can later verify, if needed whether the modules
						are successfully installed through the Modules view of the
						Studio.</span>
				</p></td></tr></table></div><div class="section" title="tSASOutput properties"><div class="titlepage"><div><div><h3 class="title"><a name="d0e149804"></a>tSASOutput properties</h3></div></div></div><div class="informaltable"><table border="1"><colgroup><col class="c1"><col class="c2"><col class="c3"></colgroup><tbody><tr><td valign="top">
									<p>
										<span class="bold"><strong>Component family</strong></span>
									</p>
								</td><td valign="top">
									<p>Databases/SAS</p>
								</td><td class="auto-generated">&nbsp;</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>Function</strong></span>
									</p>
								</td><td colspan="2" valign="top">
									<p><span class="bold"><strong>tSASOutput</strong></span> writes,
										updates, makes changes or suppresses entries in a
										data&shy;base.</p>
								</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>Purpose</strong></span>
									</p>
								</td><td colspan="2" valign="top">
									<p><span class="bold"><strong>tSASOutput</strong></span> executes the
										action defined on the table and/or on the data contained in
										the table, based on the incoming flow from the preceding
										component in the Job.</p>
								</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>Basic settings</strong></span>
									</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Use an existing connection</em></span>
									</p>
								</td><td valign="top">
									<p>Select this check box and click the relevant <span class="bold"><strong>tSASConnection</strong></span> component on the
											<span class="bold"><strong>Component list</strong></span> to reuse
										the connection details you already defined.</p>
									<p> </p>
									<div class="note" title="Note" style="margin-left: 0.5in; margin-right: 0.5in;"><table border="0" summary="Note"><tr><td rowspan="2" align="center" valign="top" width="16pt"><img alt="[Note]" src="../images/note.png"></td><th align="left"></th></tr><tr><td align="left" valign="top"><p>When a Job contains the parent Job and the child Job,
												<span class="bold"><strong>Component list</strong></span>
											presents only the connection components in the same Job
											level, so if you need to use an existing connection from
											the other level, make sure that the available connection
											components are sharing the intended connection.</p><p>For more information on how to share a DB connection
											across Job levels, see <span class="bold"><strong>Use or
												register a shared DB connection</strong></span> in any
											database connection component corresponding to the
											database you are using.</p><p>Otherwise, you can as well deactivate the connection
											components and use <span class="bold"><strong>Dynamic
												settings</strong></span> of the component to specify the
											intended connection manually. In this case, make sure
											the connection name is unique and distinctive all over
											through the two Job levels. For more information about
												<span class="bold"><strong>Dynamic settings</strong></span>,
											see your studio user guide.</p></td></tr></table></div>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>SAS URL</em></span>
									</p>
								</td><td valign="top">
									<p>Enter the URL to connect to the desired DB.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Driver JAR</em></span>
									</p>
								</td><td valign="top">
									<p>In the drop down list, select a desired available driver,
										or download one from a local directory through clicking the
										three-dot button.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Class Name</em></span>
									</p>
								</td><td valign="top">
									<p>Type in the Class name to be pointed to in the
										driver.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p><span class="emphasis"><em>Username</em></span> and
											<span class="emphasis"><em>Password</em></span></p>
								</td><td valign="top">
									<p>DB user authentication data.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Table</em></span>
									</p>
								</td><td valign="top">
									<p>Name of the table to read. </p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Action on data</em></span>
									</p>
								</td><td valign="top">
									<p>On the data of the table defined, you can perform:</p>
									<p>
										<span class="bold"><strong>Insert</strong></span>: Add new entries to
										the table. If duplicates are found, job stops.</p>
									<p>
										<span class="bold"><strong>Update</strong></span>: Make changes to
										existing entries</p>
									<p>
										<span class="bold"><strong>Insert or update</strong></span>: Add
										entries or update existing ones.</p>
									<p>
										<span class="bold"><strong>Update or insert</strong></span>: Update
										existing entries or create it if non existing</p>
									<p>
										<span class="bold"><strong>Delete</strong></span>: Remove entries
										corresponding to the input flow.</p>
									<div class="warning" title="Warning" style="margin-left: 0.5in; margin-right: 0.5in;"><table border="0" summary="Warning"><tr><td rowspan="2" align="center" valign="top" width="16pt"><img alt="[Warning]" src="../images/warning.png"></td><th align="left"></th></tr><tr><td align="left" valign="top"><p>
											<span class="italic"> It is necessary to specify at
												least one column as a primary key on which the
												<span class="bold"><strong>Update</strong></span> and
												<span class="bold"><strong>Delete</strong></span> operations
												are based. You can do that by clicking <span class="bold"><strong>Edit Schema</strong></span> and selecting
												the check box(es) next to the column(s) you want to
												set as primary key(s). For an advanced use, click
												the <span class="bold"><strong>Advanced
												settings</strong></span> view where you can
												simultaneously define primary keys for the <span class="bold"><strong>Update</strong></span> and <span class="bold"><strong>Delete</strong></span> operations. To do
												that: Select the <span class="bold"><strong>Use field
												options</strong></span> check box and then in the
												<span class="bold"><strong>Key in update
												column</strong></span>, select the check boxes next to
												the column names you want to use as a base for the
												Update operation. Do the same in the <span class="bold"><strong>Key in delete column</strong></span> for
												the Delete operation.</span>
										</p></td></tr></table></div>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Clear data in table</em></span>
									</p>
								</td><td valign="top">
									<p>Select this check box to delete data in the selected table
										before any operation.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p><span class="emphasis"><em>Schema</em></span> and <span class="emphasis"><em>Edit
											Schema</em></span></p>
								</td><td valign="top">
									<p>A schema is a row description, i.e., it defines the number
										of fields to be processed and passed on to the next
										component. The schema is either <span class="bold"><strong>Built-in</strong></span> or stored remotely in the <span class="bold"><strong>Repository</strong></span>. </p>
									<p> </p>

								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p><span class="bold"><strong>Built-in</strong></span>: The schema is
										created and stored locally for this component only. Related
										topic: see <span class="bluebold">Talend Open Studio</span>
										<span class="bold"><strong>User Guide</strong></span>.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p><span class="bold"><strong>Repository</strong></span>: The schema
										already exists and is stored in the Repository, hence can be
										reused. Related topic: see <span class="bluebold">Talend Open Studio</span>
										<span class="bold"><strong>User Guide</strong></span>.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Die on error</em></span>
									</p>
								</td><td valign="top">
									<p>This check box is selected by default. Clear the check box
										to skip the row on error and complete the process for
										error-free rows. If needed, you can retrieve the rows on
										error via a <span class="bold"><strong>Row</strong></span> &gt;
											<span class="bold"><strong>Rejects</strong></span> link.</p>
								</td></tr><tr><td valign="top">
									<p><a name="Xaa3193508"></a>
										<span class="bold"><strong>Advanced settings</strong></span>
									</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Commit every</em></span>
									</p>
								</td><td valign="top">
									<p>Enter the number of rows to be completed before committing
										batches of rows together into the DB. This option ensures
										transaction quality (but not rollback) and, above all,
										better performance at execution.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Additional Columns</em></span>
									</p>
								</td><td valign="top">
									<p>This option is not offered if you create (with or without
										drop) the DB table. This option allows you to call SQL
										functions to perform actions on columns, which are not
										insert, nor update or delete actions, or action that require
										particular preprocessing.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p><span class="bold"><strong>Name:</strong></span> Type in the name of
										the schema column to be altered or inserted as a new
										column.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p><span class="bold"><strong>SQL expression:</strong></span> Type in
										the SQL statement to be executed in order to alter or insert
										the relevant column data.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p><span class="bold"><strong>Position:</strong></span> Select
											<span class="bold"><strong>Before</strong></span>, <span class="bold"><strong>Replace</strong></span> or <span class="bold"><strong>After</strong></span> following the action to be performed
										on the reference column.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p><span class="bold"><strong>Reference column:</strong></span> Type in
										a column of reference that the <span class="bold"><strong>tSASOutput </strong></span>can use to place or replace the
										new or altered column.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p><span class="emphasis"><em>Use field option</em></span>s</p>
								</td><td valign="top">
									<p>Select this check box to customize a request, especially
										when there is double action on data.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Enable debug mode</em></span>
									</p>
								</td><td valign="top">
									<p>Select this check box to display each step during
										processing entries in a database.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>tStatCatcher Statistics</em></span>
									</p>
								</td><td valign="top">
									<p>Select this check box to collect log data at the component
										level.</p>
								</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>Usage</strong></span>
									</p>
								</td><td colspan="2" valign="top">
									<p>This component offers the flexibility benefit of the DB
										query and covers all of the SQL queries possible.</p>
									<p> This component must be used as an output component. It
										allows you to carry out actions on a table or on the data of
										a table in a SAS database. It also allows you to create a
										reject flow using a <span class="bold"><strong>Row &gt;
											Rejects</strong></span> link to filter data in error. For an
										example of <span class="bold"><strong>tMySqlOutput</strong></span> in
										use, see <a class="xref" href="tMysqlOutput.html#Raa73790" title="Scenario&nbsp;3: Retrieve data in error with a Reject link">the section called &#8220;Scenario&nbsp;3: Retrieve data in error with a Reject link&#8221;</a>.</p>
								</td></tr></tbody></table></div></div><div class="section" title="Related scenarios"><div class="titlepage"><div><div><h3 class="title"><a name="d0e150418"></a>Related scenarios</h3></div></div></div><p>For scenarios in which <span class="bold"><strong>tSASOutput</strong></span> might be
					used, see:</p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p><a class="xref" href="tDBOutput.html#Raa47355" title="Scenario: Displaying DB output">the section called &#8220;Scenario: Displaying DB output&#8221;</a>.</p></li><li class="listitem"><p><a class="xref" href="tMysqlOutput.html#Raa81493" title="Scenario 1: Adding a new column and altering data in a DB table">the section called &#8220;Scenario 1: Adding a new column and altering data in a DB table&#8221;</a>.</p></li></ul></div></div></div></body></html>