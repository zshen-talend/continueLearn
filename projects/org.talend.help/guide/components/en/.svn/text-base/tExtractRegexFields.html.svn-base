<html><head>
      <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
   <title>tExtractRegexFields</title><meta name="generator" content="DocBook XSL-NS Stylesheets V1.76.1"><link rel="home" href="index.html" title="Talend Open Studio"><link rel="up" href="ch15.html" title="Chapter&nbsp;15.&nbsp;Processing components"><link rel="prev" href="tExtractPositionalFields.html" title="tExtractPositionalFields"><link rel="next" href="processing-tExtractXMLField.html" title="tExtractXMLField"></head><body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF"><div lang="EN" class="section" title="tExtractRegexFields"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="tExtractRegexFields"></a>tExtractRegexFields</h2></div></div></div><div class="mediaobject"><img src="../images/tExtractRegexFields_icon32_white.png"></div><div class="section" title="tExtractRegexFields properties"><div class="titlepage"><div><div><h3 class="title"><a name="d0e248551"></a>tExtractRegexFields properties</h3></div></div></div><div class="informaltable"><table border="1"><colgroup><col class="c1"><col class="c2"><col class="c3"></colgroup><tbody><tr><td valign="top">
									<p>
										<span class="bold"><strong>Component family</strong></span>
									</p>
								</td><td valign="top">
									<p>Processing/Fields</p>
								</td><td valign="top">&nbsp;</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>Function</strong></span>
									</p>
								</td><td colspan="2" valign="top">
									<p><span class="bold"><strong>tExtractRegexFields
										</strong></span>generates multiple columns from a given column
										using regex matching.</p>
								</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>Purpose</strong></span>
									</p>
								</td><td colspan="2" valign="top">
									<p><span class="bold"><strong>tExtractRegexFields</strong></span>
										allows you to use regular expressions to extract data from a
										formatted string.</p>
								</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>Basic settings</strong></span>
									</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Field to split</em></span>
									</p>
								</td><td valign="top">
									<p>Select on the list the field (column) to split.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Regex</em></span>
									</p>
								</td><td valign="top">
									<p>Enter a regular expression according to the programming
										language you are using.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p><span class="emphasis"><em>Schema type</em></span> and <span class="emphasis"><em>Edit
											Schema</em></span></p>
								</td><td valign="top">
									<p>A schema is a row description, i.e., it defines the number
										of fields that will be processed and passed on to the next
										component. The schema is either built-in or remote in the
										Repository. </p>
									<p> Click <span class="bold"><strong>EditSchema</strong></span> to make
										changes to the schema. Note that if you make changes, the
										schema automatically becomes built-in.</p>
									<p> Click <span class="bold"><strong>Sync columns</strong></span> to
										retrieve the schema from the previous component connected to
											<span class="bold"><strong>tExtractRegexFields</strong></span>.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p><span class="bold"><strong>Built-in</strong></span>: You create and
										store the schema locally for the component. Related topic:
										see <span class="bluebold">Talend Open Studio</span>
										<span class="bold"><strong>User Guide</strong></span>.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p><span class="bold"><strong>Repository</strong></span>: You have
										already created and stored the schema in the Repository. You
										can reuse it in various projects and Job flowcharts. Related
										topic: see <span class="bluebold">Talend Open Studio</span>
										<span class="bold"><strong>User Guide</strong></span>.</p>
								</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>Advanced settings</strong></span>
									</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Die on error</em></span>
									</p>
								</td><td valign="top">
									<p>This check box is selected by default. Clear the check box
										to skip the row on error and complete the process for
										error-free rows. If needed, you can retrieve the rows on
										error via a <span class="bold"><strong>Row</strong></span> &gt;
											<span class="bold"><strong>Reject</strong></span> link.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>Check each row structure against schema</p>
								</td><td valign="top">
									<p>Select this check box to synchronize every row against the
										input schema.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>tStatCatcher Statistics</em></span>
									</p>
								</td><td valign="top">
									<p>Select this check box to gather the processing metadata at
										the Job level as well as at each component level.</p>
								</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>Usage</strong></span>
									</p>
								</td><td colspan="2" valign="top">
									<p>This component handles flow of data therefore it requires
										input and output components. It allows you to extract data
										from a delimited field, using a <span class="bold"><strong>Row</strong></span> &gt; <span class="bold"><strong>Main</strong></span> link, and enables you to create a
										reject flow filtering data which type does not match the
										defined type.</p>
								</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>Limitation</strong></span>
									</p>
								</td><td colspan="2" valign="top">
									<p>n/a</p>
								</td></tr></tbody></table></div></div><div class="section" title="Scenario: Extracting name, domain and TLD from e-mail addresses"><div class="titlepage"><div><div><h3 class="title"><a name="d0e248830"></a>Scenario: Extracting name, domain and TLD from e-mail addresses</h3></div></div></div><p>This Java scenario describes a three-component Job where <span class="bold"><strong>tExtractRegexFields</strong></span> is used to specify a regular expression that
					corresponds to one column in the input data, <span class="emphasis"><em>email</em></span>. The
						<span class="bold"><strong>tExtractRegexFields</strong></span> component is used to
					perform the actual regular expression matching. This regular expression includes
					field identifiers for user name, domain name and Top-Level Domain name portions
					in each e-mail address. If the given e-mail address is valid, the name, domain
					and TLD are extracted and displayed on the console in three separate columns.
					Data in the other two input columns, <span class="emphasis"><em>id</em></span> and
						<span class="emphasis"><em>age</em></span> is extracted and routed to destination as
					well.</p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>Drop the following components from the <span class="bold"><strong>Palette</strong></span> onto the design workspace: <span class="bold"><strong>tFileInputDelimited</strong></span>, <span class="bold"><strong>tExtractRegexFields</strong></span>, and <span class="bold"><strong>tLogRow</strong></span>.</p></li><li class="listitem"><p>Connect the three components using <span class="bold"><strong>Row
								Main</strong></span> links.</p></li></ul></div><div class="mediaobject"><img src="../images/Use_Case_tExtractRegexField.png"></div><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>In the design workspace, select <span class="bold"><strong>tFileInputDelimited</strong></span>.</p></li><li class="listitem"><p>Click the <span class="bold"><strong>Component</strong></span> tab to define the
							basic settings for <span class="bold"><strong>tFileInputDelimited</strong></span>.</p></li><li class="listitem"><p>In the <span class="bold"><strong>Basic settings </strong></span>view, set
								<span class="bold"><strong>Property Type</strong></span> to <span class="bold"><strong>Built-In</strong></span>.</p></li><li class="listitem"><p>Click the three-dot <span class="bold"><strong>[...]</strong></span> button next
							to the <span class="bold"><strong>File Name </strong></span>field to select the
							path to the input file. </p></li></ul></div><div class="note" title="Note" style="margin-left: 0.5in; margin-right: 0.5in;"><table border="0" summary="Note"><tr><td rowspan="2" align="center" valign="top" width="16pt"><img alt="[Note]" src="../images/note.png"></td><th align="left"></th></tr><tr><td align="left" valign="top"><p>The <span class="bold"><strong>File Name</strong></span> field is mandatory.</p></td></tr></table></div><div class="mediaobject"><img src="../images/Use_Case_tExtractRegexField1.png"></div><p>The input file used in this scenario is called <span class="emphasis"><em>test4.</em></span> It
					is a text file that holds three columns: <span class="emphasis"><em>id</em></span>,
						<span class="emphasis"><em>email</em></span>, and <span class="emphasis"><em>age</em></span>.</p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>Fill in all other fields as needed. For more information, see <a class="xref" href="tMDMInput.html#Raa86313" title="tMDMInput properties">the section called &#8220;tMDMInput properties&#8221;</a>. In this scenario, the header and the footer
							are not set and there is no limit for the number of processed
							rows</p></li><li class="listitem"><p>Click <span class="bold"><strong>Edit schema </strong></span>to describe the
							data structure of this input file. In this scenario, the schema is made
							of the three columns, <span class="emphasis"><em>id</em></span>,
								<span class="emphasis"><em>email</em></span> and <span class="emphasis"><em>age.</em></span></p></li><li class="listitem"><p>In the design workspace, select <span class="bold"><strong>tExtractRegexFields</strong></span>.</p></li><li class="listitem"><p>Click the <span class="bold"><strong>Component</strong></span> tab to define the
							basic settings for <span class="bold"><strong>tExtractRegexFields</strong></span>.</p></li><li class="listitem"><p>From the <span class="bold"><strong>Field to split</strong></span> list, select
							the column to split, <span class="emphasis"><em>email</em></span> in this scenario.</p></li><li class="listitem"><p>In the <span class="bold"><strong>Regex</strong></span> panel, enter the regular
							expression you want to use to perform data matching, java regular
							expression in this scenario. </p></li></ul></div><div class="mediaobject"><img src="../images/Use_Case_tExtractRegexField2.png"></div><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>Click <span class="bold"><strong>Edit schema </strong></span>to describe the
							data structure of this processing component.</p></li><li class="listitem"><p>In the output panel of the <span class="bold"><strong>[Schema of
								tExtractRegexFields]</strong></span> dialog box, click the plus button to
							add five columns for the output schema.</p></li></ul></div><div class="mediaobject"><img src="../images/Use_Case_tExtractRegexField3.png"></div><p>In this scenario, we want to split the input <span class="emphasis"><em>email</em></span> column
					into three columns in the output flow, <span class="emphasis"><em>name, domain, </em></span>and
						<span class="emphasis"><em>tld.</em></span> The two other input columns will be extracted as
					they are.</p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>Click <span class="bold"><strong>OK</strong></span> to close the <span class="bold"><strong>[Schema of tExtractRegexFields]</strong></span> dialog
							box.</p></li><li class="listitem"><p>In the design workspace, select <span class="bold"><strong>tLogRow</strong></span> and click the <span class="bold"><strong>Component</strong></span> tab to define its basic settings. For more
							information, see <a class="xref" href="tLogRow.html" title="tLogRow">the section called &#8220;tLogRow&#8221;</a>.</p></li><li class="listitem"><p>Save your Job and press <span class="bold"><strong>F6</strong></span> to execute
							it.</p></li></ul></div><div class="mediaobject"><img src="../images/Use_Case_tExtractRegexField6.png"></div><p>The <span class="bold"><strong>tExtractRegexFields</strong></span> component matches all
					given e-mail addresses with the defined regular expression and extracts the
					name, domain, and TLD names and displays them on the console in three separate
					columns. The two other columns, <span class="emphasis"><em>id</em></span> and
						<span class="emphasis"><em>age</em></span>, are extracted as they are.</p></div></div></body></html>