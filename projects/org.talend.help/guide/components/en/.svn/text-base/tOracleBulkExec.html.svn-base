<html><head>
      <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
   <title>tOracleBulkExec</title><meta name="generator" content="DocBook XSL-NS Stylesheets V1.76.1"><link rel="home" href="index.html" title="Talend Open Studio"><link rel="up" href="Raa29876.html" title="Chapter&nbsp;6.&nbsp;Database components"><link rel="prev" href="tNetezzaRow.html" title="tNetezzaRow"><link rel="next" href="tOracleClose.html" title="tOracleClose"></head><body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF"><div lang="EN" class="section" title="tOracleBulkExec"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="tOracleBulkExec"></a>tOracleBulkExec</h2></div></div></div><div class="mediaobject"><img src="../images/tOracleBulkExec_icon32_white.png"></div><div class="section" title="tOracleBulkExec properties"><div class="titlepage"><div><div><h3 class="title"><a name="d0e128151"></a>tOracleBulkExec properties</h3></div></div></div><p>The <span class="bold"><strong>tOracleOutputBulk</strong></span> and <span class="bold"><strong>tOracleBulkExec</strong></span> components are used together in a two
					step process. In the first step, an output file is generated. In the second
					step, this file is used in the INSERT operation used to feed a database. These
					two steps are fused together in the <span class="bold"><strong>tOracleOutputBulkExec</strong></span> component, detailed in a separate section.
					The advantage of using two separate steps is that the data can be transformed
					before it is loaded in the database.</p><div class="informaltable"><table border="1"><colgroup><col class="c1"><col class="c2"><col class="c3"></colgroup><tbody><tr><td valign="top">
									<p>
										<span class="bold"><strong>Component family</strong></span>
									</p>
								</td><td valign="top">
									<p>Databases/Oracle</p>
								</td><td valign="top">&nbsp;</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>Function</strong></span>
									</p>
								</td><td colspan="2" valign="top">
									<p><span class="bold"><strong>tOracleBulkExec</strong></span> inserts,
										appends, replaces or truncate data in an Oracle database.
									</p>
								</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>Purpose</strong></span>
									</p>
								</td><td colspan="2" valign="top">
									<p>As a dedicated component, it allows gains in performance
										during operations performed on data of an Oracle
										database.</p>
								</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>Basic settings</strong></span>
									</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Property type</em></span>
									</p>
								</td><td valign="top">
									<p>Either <span class="bold"><strong>Built-in</strong></span> or
											<span class="bold"><strong>Repository</strong></span>. </p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p><span class="bold"><strong>Built-in</strong></span>: No property
										data stored centrally.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p><span class="bold"><strong>Repository</strong></span>: Select the
										repository file in which the properties are stored. The
										fields that follow are completed automatically using the
										data retrieved.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Use an existing connection</em></span>
									</p>
								</td><td valign="top">
									<p>Select this check box when you are using the component
											<span class="bold"><strong>tOracleConnection</strong></span>.</p>
									<p> </p>
									<div class="note" title="Note" style="margin-left: 0.5in; margin-right: 0.5in;"><table border="0" summary="Note"><tr><td rowspan="2" align="center" valign="top" width="16pt"><img alt="[Note]" src="../images/note.png"></td><th align="left"></th></tr><tr><td align="left" valign="top"><p>When a Job contains the parent Job and the child Job,
												<span class="bold"><strong>Component list</strong></span>
											presents only the connection components in the same Job
											level, so if you need to use an existing connection from
											the other level, make sure that the available connection
											components are sharing the intended connection.</p><p>For more information on how to share a DB connection
											across Job levels, see <span class="bold"><strong>Use or
												register a shared DB connection</strong></span> in any
											database connection component corresponding to the
											database you are using.</p><p>Otherwise, you can as well deactivate the connection
											components and use <span class="bold"><strong>Dynamic
												settings</strong></span> of the component to specify the
											intended connection manually. In this case, make sure
											the connection name is unique and distinctive all over
											through the two Job levels. For more information about
												<span class="bold"><strong>Dynamic settings</strong></span>,
											see your studio user guide.</p></td></tr></table></div>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Connection type</em></span>
									</p>
								</td><td valign="top">
									<p>Drop-down list of available drivers</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>DB Version</em></span>
									</p>
								</td><td valign="top">
									<p>Select the Oracle version in use</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Host</em></span>
									</p>
								</td><td valign="top">
									<p>IP address of the database server</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Port</em></span>
									</p>
								</td><td valign="top">
									<p>Port number listening the database server</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Database</em></span>
									</p>
								</td><td valign="top">
									<p>Database name.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Schema</em></span>
									</p>
								</td><td valign="top">
									<p>Schema name.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p><span class="emphasis"><em>Username</em></span> and
											<span class="emphasis"><em>Password</em></span></p>
								</td><td valign="top">
									<p>DB user authentication data.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Table</em></span>
									</p>
								</td><td valign="top">
									<p>Name of the table to be written. Note that only one table
										can be written at a time</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Action on table</em></span>
									</p>
								</td><td valign="top">
									<p>On the table defined, you can perform one of the following
										operations:</p>
									<p>
										<span class="bold"><strong>None</strong></span>: No operation is
										carried out.</p>
									<p>
										<span class="bold"><strong>Drop and create a table</strong></span>:
										The table is removed and created again.</p>
									<p>
										<span class="bold"><strong>Create a table</strong></span>: The table
										does not exist and gets created.</p>
									<p>
										<span class="bold"><strong>Create a table if doesn&#8217;t
											exist</strong></span>: The table is created if it does not
										exist.</p>
									<p>
										<span class="bold"><strong>Clear a table</strong></span>: The table
										content is deleted.</p>
									<p>
										<span class="bold"><strong>Truncate table</strong></span>: The table
										content is deleted. You do not have the possibility to
										rollback the operation.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Data file name</em></span>
									</p>
								</td><td valign="top">
									<p>Name of the file to be processed. </p>
									<p> Related topic: see <span class="bluebold">Talend Open Studio</span>
										<span class="bold"><strong>User Guide</strong></span>.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Action on data</em></span>
									</p>
								</td><td valign="top">
									<p>On the data of the table defined, you can perform:</p>
									<p>
										<span class="bold"><strong>Insert</strong></span>: Inserts rows to an
										empty table. If duplicates are found, Job stops.</p>
									<p>
										<span class="bold"><strong>Update</strong></span>: Update the existing
										data of the table.</p>
									<p>
										<span class="bold"><strong>Append</strong></span>: Adds rows to the
										existing data of the table</p>
									<p>
										<span class="bold"><strong>Replace</strong></span>: Overwrites some
										rows of the table</p>
									<p>
										<span class="bold"><strong>Truncate</strong></span>: Drops table
										entries and inserts new input flow data.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p><span class="emphasis"><em>Schema</em></span> and <span class="emphasis"><em>Edit
											Schema</em></span></p>
								</td><td valign="top">
									<p>A schema is a row description, i.e., it defines the number
										of fields to be processed and passed on to the next
										component. The schema is either <span class="bold"><strong>Built-in</strong></span> or stored remotely in the <span class="bold"><strong>Repository</strong></span>. </p>
								</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>Advanced settings</strong></span>
									</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Advanced separator (for number)</em></span>
									</p>
								</td><td valign="top">
									<p>Select this check box to change the separator used for the
										numbers.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Use existing control file</em></span>
									</p>
								</td><td valign="top">
									<p>Select this check box if you use a control file (.ctl) and
										specify its path in the <span class="bold"><strong>.ctl file
											name</strong></span> field.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Record format</em></span>
									</p>
								</td><td valign="top">
									<p>Define the record format: </p>
									<p>
										<span class="bold"><strong>Default</strong></span>: format parameters
										are set by default. </p>
									<p>
										<span class="bold"><strong>Stream</strong></span>: set <span class="bold"><strong>Record terminator</strong></span>.</p>
									<p>
										<span class="bold"><strong>Fixed</strong></span>: set the <span class="bold"><strong>Record length</strong></span>.</p>
									<p>
										<span class="bold"><strong>Variable</strong></span>: set the <span class="bold"><strong>Field size of the record
										length</strong></span>.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Specify .ctl file&#8217;s INTO TABLE clause
											manually</em></span>
									</p>
								</td><td valign="top">
									<p>Select this check box to manually fill in the <span class="bold"><strong>INTO TABLE clause</strong></span> of the control
										file. </p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Fields terminated by</em></span>
									</p>
								</td><td valign="top">
									<p>Character, string or regular expression to separate
										fields: </p>
									<p>
										<span class="bold"><strong>None</strong></span>: no separator is
										used.</p>
									<p>
										<span class="bold"><strong>Whitespace</strong></span>: the separator
										used is a space.</p>
									<p>
										<span class="bold"><strong>EOF (used for loading LOBs from
											lobfile)</strong></span>: the separator used is an EOF
										character (End Of File).</p>
									<p>
										<span class="bold"><strong>Other terminator</strong></span>: Set
										another terminator in the <span class="bold"><strong>Field
											terminator</strong></span> field. </p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Use fields enclosure</em></span>
									</p>
								</td><td valign="top">
									<p>Select this check box if you want to use enclosing
										characters for the text: </p>
									<p>
										<span class="bold"><strong>Fields enclosure (left
											part)</strong></span>: character delimiting the left of the
										field. </p>
									<p>
										<span class="bold"><strong>Field enclosure (right
											part)</strong></span>: character delimiting the right of the
										field. </p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Use schema&#8217;s Date Pattern to load Date
											field</em></span>
									</p>
								</td><td valign="top">
									<p>Select this check box to use the date pattern of the
										schema in the date field. </p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Specify field condition</em></span>
									</p>
								</td><td valign="top">
									<p>Select this check box to define data loading
										condition.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Preserve blanks</em></span>
									</p>
								</td><td valign="top">
									<p>Select this check box to preserve the blanks. </p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Trailing null columns</em></span>
									</p>
								</td><td valign="top">
									<p>Select this check box to load null columns. </p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Load options</em></span>
									</p>
								</td><td valign="top">
									<p>Click <span class="bold"><strong>+</strong></span> to add data
										loading options:</p>
									<p>
										<span class="bold"><strong>Parameter</strong></span>: select a loading
										parameter from the list.</p>
									<p>
										<span class="bold"><strong>Value</strong></span>: enter a value for
										the parameter selected.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>NLS Language</em></span>
									</p>
								</td><td valign="top">
									<p>In the list, select the language used for the data that
										are not used in Unicode.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Set Parameter NLS_TERRITORY</em></span>
									</p>
								</td><td valign="top">
									<p>Select this check box to modify the territory conventions
										used for day and weeks numbering. Your OS value is the
										default value used.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Encoding</em></span>
									</p>
								</td><td valign="top">
									<p>Select the encoding type from the list or select <span class="bold"><strong>Custom</strong></span> and define it manually.
										This field is compulsory for database data handling.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Output</em></span>
									</p>
								</td><td valign="top">
									<p>Select the type of output for the standard output of the
										Oracle database:</p>
									<p>
										<span class="bold"><strong>to console</strong></span>,</p>
									<p>
										<span class="bold"><strong>to global variable</strong></span>.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Convert columns and table names to
											uppercase</em></span>
									</p>
								</td><td valign="top">
									<p>Select this check box to uppercase the names of the
										columns and the name of the table. </p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>tStatCatcher Statistics</em></span>
									</p>
								</td><td valign="top">
									<p>Select this check box to collect log data at the component
										level.</p>
								</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>Usage</strong></span>
									</p>
								</td><td colspan="2" valign="top">
									<p>This dedicated component offers performance and
										flexibility of Oracle DB query handling.</p>
								</td></tr></tbody></table></div></div><div class="section" title="Scenario: Truncating and inserting file data into Oracle DB"><div class="titlepage"><div><div><h3 class="title"><a name="Raa26152"></a>Scenario: Truncating and inserting file data into Oracle DB</h3></div></div></div><p>This scenario describes how to truncate the content of an Oracle DB and load
					an input file content. The related job is composed of three components that
					respectively creates the content, output this content into a file to be loaded
					onto the Oracle database after the DB table has been truncated.</p><div class="mediaobject"><img src="../images/Use_Case_tOracleBulkExec1.png"></div><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p> Drop the following components: <span class="bold"><strong>tOracleInput</strong></span>, <span class="bold"><strong>tFileOutputDelimited</strong></span>, <span class="bold"><strong>tOracleBulkExec</strong></span> from the <span class="bold"><strong>Palette</strong></span> to the design workspace</p></li><li class="listitem"><p> Connect the <span class="bold"><strong>tOracleInput</strong></span> with the
								<span class="bold"><strong>tFileOutputDelimited</strong></span> using a
								<span class="bold"><strong>row main</strong></span> link. </p></li><li class="listitem"><p> And connect the <span class="bold"><strong>tOracleInput</strong></span> to the
								<span class="bold"><strong>tOracleBulkExec</strong></span> using a <span class="bold"><strong>OnSubjobOk </strong></span>trigger link.</p></li><li class="listitem"><p> Define the Oracle connection details. We recommend you to store the
							DB connection details in the Metadata repository in order to retrieve
							them easily at any time in any job.</p></li></ul></div><div class="mediaobject"><img src="../images/Use_Case_tOracleBulkExec2.png"></div><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p> Define the schema, if it isn&#8217;t stored either in the <span class="bold"><strong>Repository</strong></span>. In this example, the schema is as
							follows: <span class="emphasis"><em>ID_Contract</em></span>,
								<span class="emphasis"><em>ID_Client</em></span>, <span class="emphasis"><em>Contract_type</em></span>,
								<span class="emphasis"><em>Contract_Value</em></span>.</p></li><li class="listitem"><p> Define the <span class="bold"><strong>tFileOutputDelimited</strong></span>
							component parameters, including output <span class="bold"><strong>File
								Name</strong></span>, <span class="bold"><strong>Row separator</strong></span> and
								<span class="bold"><strong>Fields delimiter</strong></span>.</p></li><li class="listitem"><p> Then double-click on the <span class="bold"><strong>tOracleBulkExec</strong></span> to define the DB feeding
							properties.</p></li></ul></div><div class="mediaobject"><img src="../images/Use_Case_tOracleBulkExec3.png"></div><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p> In the <span class="bold"><strong>Property Type</strong></span>, select
								<span class="bold"><strong>Repository</strong></span> mode if you stored the
							database connection details under the <span class="bold"><strong>Metadata</strong></span> node of the <span class="bold"><strong>Repository</strong></span> or select <span class="bold"><strong>Built-in</strong></span> mode to define them manually. In this scenario,
							we use the <span class="bold"><strong>Built-in</strong></span> mode.</p></li><li class="listitem"><p> Thus, set the connection parameters in the following fields:
								<span class="bold"><strong>Host</strong></span>, <span class="bold"><strong>Port</strong></span>, <span class="bold"><strong>Database</strong></span>,
								<span class="bold"><strong>Schema</strong></span>, <span class="bold"><strong>Username</strong></span>, and <span class="bold"><strong>Password</strong></span>.</p></li><li class="listitem"><p> Fill in the name of the <span class="bold"><strong>Table</strong></span> to be
							fed and the <span class="bold"><strong>Action on data</strong></span> to be
							carried out, in this use case: <span class="bold"><strong>insert</strong></span>.
						</p></li><li class="listitem"><p> In the <span class="bold"><strong>Schema</strong></span> field, select
								<span class="bold"><strong>Built-in</strong></span> mode, and click <span class="bold"><strong>[...]</strong></span> button next to the <span class="bold"><strong>Edit schema</strong></span> field to describe the structure
							of the data to be passed on to the next component.</p></li><li class="listitem"><p> Click the <span class="bold"><strong>Advanced settings</strong></span> view to
							configure the advanced settings of the component. </p></li></ul></div><div class="mediaobject"><img src="../images/Use_Case_tOracleBulkExec4.png"></div><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p> Select the Use an existing control file check box if you want to use
							a control file (.ctl) storing the status of the physical structure of
							the database. Or, fill in the following fields manually: <span class="bold"><strong>Record format</strong></span>, <span class="bold"><strong>Specify
								.ctl file&#8217;s INTO TABLE clause manually</strong></span>, <span class="bold"><strong>Field terminated by</strong></span>, <span class="bold"><strong>Use field enclosure</strong></span>, <span class="bold"><strong>Use schema&#8217;s
								Date Pattern to load Date field</strong></span>, <span class="bold"><strong>Specify field condition</strong></span>, <span class="bold"><strong>Preserve
								blanks</strong></span>, <span class="bold"><strong>Trailing null
								columns</strong></span>, <span class="bold"><strong>Load options</strong></span>,
								<span class="bold"><strong>NLS Language</strong></span> et <span class="bold"><strong>Set Parameter NLS_TERRITORY</strong></span> according to your
							database.</p></li><li class="listitem"><p> Define the <span class="bold"><strong>Encoding</strong></span> as in preceding
							steps.</p></li><li class="listitem"><p> For this scenario, in the <span class="bold"><strong>Output</strong></span>
							field, select <span class="bold"><strong>to console</strong></span> to output the
							standard output f the database to the console.</p></li></ul></div><p>Press <span class="bold"><strong>F6</strong></span> to run the job. The log output
					displays in the <span class="bold"><strong>Run</strong></span> tab and the table is fed
					with the parameter file data. </p><p>Related topic: see <a class="xref" href="tMysqlOutputBulkExec.html#Raa97924" title="Scenario: Inserting data in MySQL database">the section called &#8220;Scenario: Inserting data in MySQL database&#8221;</a>.</p></div></div></body></html>