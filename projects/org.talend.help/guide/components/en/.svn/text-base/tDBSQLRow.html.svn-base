<html><head>
      <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
   <title>tDBSQLRow</title><meta name="generator" content="DocBook XSL-NS Stylesheets V1.76.1"><link rel="home" href="index.html" title="Talend Open Studio"><link rel="up" href="Raa29876.html" title="Chapter&nbsp;6.&nbsp;Database components"><link rel="prev" href="tDBOutput.html" title="tDBOutput"><link rel="next" href="tEXAInput.html" title="tEXAInput"></head><body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF"><div lang="EN" class="section" title="tDBSQLRow"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="tDBSQLRow"></a>tDBSQLRow</h2></div></div></div><div class="mediaobject"><img src="../images/tDBSQLRow_icon32_white.png"></div><div class="section" title="tDBSQLRow properties"><div class="titlepage"><div><div><h3 class="title"><a name="Raa82693"></a>tDBSQLRow properties</h3></div></div></div><div class="informaltable"><table border="1"><colgroup><col class="c1"><col class="c2"><col class="c3"></colgroup><tbody><tr><td valign="top">
									<p>
										<span class="bold"><strong>Component family</strong></span>
									</p>
								</td><td valign="top">
									<p>Databases/DB Generic</p>
								</td><td valign="top">&nbsp;</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>Function</strong></span>
									</p>
								</td><td colspan="2" valign="top">
									<p><span class="bold"><strong>tDBSQLRow</strong></span> is the generic
										component for database query. It executes the SQL query
										stated onto the specified database. The row suffix means the
										component implements a flow in the job design although it
										does not provide output. </p>
									<div class="note" title="Note" style="margin-left: 0.5in; margin-right: 0.5in;"><table border="0" summary="Note"><tr><td rowspan="2" align="center" valign="top" width="16pt"><img alt="[Note]" src="../images/note.png"></td><th align="left"></th></tr><tr><td align="left" valign="top"><p>For performance reasons, specific DB component should
											always be preferred to the generic component.</p></td></tr></table></div>
								</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>Purpose</strong></span>
									</p>
								</td><td colspan="2" valign="top">
									<p>Depending on the nature of the query and the database,
											<span class="bold"><strong>tDBSQLRow</strong></span> acts on the
										actual DB structure or on the data (although without
										handling data). The SQLBuilder tool helps you write easily
										your SQL statements.</p>
								</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>Basic settings</strong></span>
									</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Property type</em></span>
									</p>
								</td><td valign="top">
									<p>Either <span class="bold"><strong>Built-in</strong></span> or
											<span class="bold"><strong>Repository</strong></span>. </p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p><span class="bold"><strong>Built-in</strong></span>: No property
										data stored centrally.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p><span class="bold"><strong>Repository</strong></span>: Select the
										repository file in which the properties are stored. The
										fields that follow are completed automatically using the
										data retrieved.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Database</em></span>
									</p>
								</td><td valign="top">
									<p>Name of the database</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p><span class="emphasis"><em>Username</em></span> and
											<span class="emphasis"><em>Password</em></span></p>
								</td><td valign="top">
									<p>DB user authentication data.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p><span class="emphasis"><em>Schema</em></span> and <span class="emphasis"><em>Edit
											Schema</em></span></p>
								</td><td valign="top">
									<p>A schema is a row description, i.e., it defines the number
										of fields to be processed and passed on to the next
										component. The schema is either <span class="bold"><strong>Built-in</strong></span> or stored remotely in the <span class="bold"><strong>Repository</strong></span>. </p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p><span class="bold"><strong>Built-in</strong></span>: The schema is
										created and stored locally for this component only. Related
										topic: see <span class="bluebold">Talend Open Studio</span>
										<span class="bold"><strong>User Guide</strong></span>.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p><span class="bold"><strong>Repository</strong></span>: The schema
										already exists and is stored in the Repository, hence can be
										reused. Related topic: see <span class="bluebold">Talend Open Studio</span>
										<span class="bold"><strong>User Guide</strong></span>.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Query type</em></span>
									</p>
								</td><td valign="top">
									<p>Either <span class="bold"><strong>Built-in</strong></span> or
											<span class="bold"><strong>Repository</strong></span>. </p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p><span class="bold"><strong>Built-in</strong></span>: Fill in
										manually the query statement or build it graphically using
										SQLBuilder</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p><span class="bold"><strong>Repository</strong></span>: Select the
										relevant query stored in the Repository. The Query field
										gets accordingly filled in.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Table Name</em></span>
									</p>
								</td><td valign="top">
									<p>Name of the source table where changes made to data should
										be captured.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Query</em></span>
									</p>
								</td><td valign="top">
									<p>Enter your DB query paying particularly attention to
										properly sequence the fields in order to match the schema
										definition. </p>
								</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>Advanced settings</strong></span>
									</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Propagate QUERY&#8217;s recordset</em></span>
									</p>
								</td><td valign="top">
									<p>Select this check box to insert the result of the query
										into a COLUMN of the current flow. Select this column from
										the <span class="bold"><strong>use column</strong></span> list.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Use PreparedStatement</em></span>
									</p>
								</td><td valign="top">
									<p>Select this checkbox if you want to query the database
										using a PreparedStatement. In the <span class="bold"><strong>Set
											PreparedStatement Parameter </strong></span>table, define the
										parameters represented by &#8220;?&#8221; in the SQL instruction of the
											<span class="bold"><strong>Query</strong></span> field in the
											<span class="bold"><strong>Basic Settings</strong></span>
										tab.</p>
									<p>
										<span class="bold"><strong>Parameter Index</strong></span>: Enter the
										parameter position in the SQL instruction.</p>
									<p>
										<span class="bold"><strong>Parameter Type</strong></span>: Enter the
										parameter type.</p>
									<p>
										<span class="bold"><strong>Parameter Value</strong></span>: Enter the
										parameter value.</p>
									<p> </p>
									<div class="note" title="Note" style="margin-left: 0.5in; margin-right: 0.5in;"><table border="0" summary="Note"><tr><td rowspan="2" align="center" valign="top" width="16pt"><img alt="[Note]" src="../images/note.png"></td><th align="left"></th></tr><tr><td align="left" valign="top"><p>This option is very useful if you need to execute the
											same query several times. Performance levels are
											increased</p></td></tr></table></div>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Commit every</em></span>
									</p>
								</td><td valign="top">
									<p>Number of rows to be completed before committing batches
										of rows together into the DB. This option ensures
										transaction quality (but not rollback) and above all better
										performance on executions.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>tStat</em></span>
										<span class="emphasis"><em>Catcher Statistics</em></span>
									</p>
								</td><td valign="top">
									<p>Select this check box to collect log data at the component
										level.</p>
								</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>Usage</strong></span>
									</p>
								</td><td colspan="2" valign="top">
									<p>This component offers the flexibility of the DB query and
										covers all possible SQL queries.</p>
									<p>
										<span class="bold"><strong>Note</strong></span>: Use the relevant
										DBRow component according to the DB type you use. Most of
										databases have their specific DBRow components.</p>
								</td></tr></tbody></table></div></div><div class="section" title="Scenario: Resetting a DB auto-increment"><div class="titlepage"><div><div><h3 class="title"><a name="Raa17909"></a>Scenario: Resetting a DB auto-increment</h3></div></div></div><p>This scenario describes a single component Job which aims at re-initializing
					the DB auto-increment to 1. This job has no output and is generally to be used
					before running a script.</p><div class="mediaobject"><img src="../images/Use_Case_tDBSQLRow1.png"></div><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p> Drag and drop a <span class="bold"><strong>tDBSQLRow</strong></span> component
							from the <span class="bold"><strong>Palette</strong></span> to the design
							workspace.</p></li><li class="listitem"><p> On the <span class="bold"><strong>Basic settings</strong></span> panel, fill in
							the DB connection properties.</p></li></ul></div><div class="mediaobject"><img src="../images/Use_Case_tDBSQLRow2.png"></div><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p> The general connection information to the database is stored in the
							Repository. The <span class="bold"><strong>Database Driver</strong></span> is a
							generic ODBC driver.</p></li><li class="listitem"><p> The <span class="bold"><strong>Schema</strong></span> is built-in for this Job
							and describes the Talend database structure. The schema does not really
							matter for this particular instance of Job as the action is made on the
							table auto-increment and not on data.</p></li><li class="listitem"><p> The <span class="bold"><strong>Query type</strong></span> is also built-in.
							Click on the three dot button to launch the SQLbuilder editor, or else
							type in directly in the Query area: </p><p> Alter table &lt;TableName&gt; auto_increment = 1 </p></li><li class="listitem"><p> Then click <span class="bold"><strong>OK</strong></span> to validate the
								<span class="bold"><strong>Basic settings</strong></span>. Then press
								<span class="bold"><strong>F6</strong></span> to run the Job.</p></li></ul></div><p>The database autoincrement is reset to 1. </p><p>Related topics: <a class="xref" href="tMysqlRow.html#Raa13214" title="tMysqlRow properties">the section called &#8220;tMysqlRow properties&#8221;</a>.</p></div></div></body></html>