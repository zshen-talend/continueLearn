<html><head>
      <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
   <title>tLoop</title><meta name="generator" content="DocBook XSL-NS Stylesheets V1.76.1"><link rel="home" href="index.html" title="Talend Open Studio"><link rel="up" href="ch14.html" title="Chapter&nbsp;14.&nbsp;Orchestration components"><link rel="prev" href="tIterateToFlow.html" title="tIterateToFlow"><link rel="next" href="tPostjob.html" title="tPostjob"></head><body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF"><div lang="EN" class="section" title="tLoop"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="tLoop"></a>tLoop</h2></div></div></div><div class="mediaobject"><img src="../images/tFor.png"></div><div class="section" title="tLoop Properties"><div class="titlepage"><div><div><h3 class="title"><a name="d0e241391"></a>tLoop Properties</h3></div></div></div><div class="informaltable"><table border="1"><colgroup><col class="c1"><col class="c2"><col class="c3"></colgroup><tbody><tr><td valign="top">
									<p>
										<span class="bold"><strong>Component family</strong></span>
									</p>
								</td><td valign="top">
									<p>Orchestration</p>
								</td><td valign="top">&nbsp;</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>Function</strong></span>
									</p>
								</td><td colspan="2" valign="top">
									<p><span class="bold"><strong>tLoop</strong></span> iterates on a task
										execution.</p>
								</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>Purpose</strong></span>
									</p>
								</td><td colspan="2" valign="top">
									<p><span class="bold"><strong>tLoop</strong></span> allows you to
										execute a task or a Job automatically, based on a
										loop</p>
								</td></tr><tr><td valign="top">
									<p>Basic settings</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Loop Type</em></span>
									</p>
								</td><td valign="top">
									<p>Select a type of loop to be carried out: either <span class="bold"><strong>For</strong></span> or <span class="bold"><strong>While</strong></span>.</p>
									<p>
										<span class="bold"><strong>For</strong></span>: The task or Job is
										carried out for the defined number of iteration</p>
									<p>
										<span class="bold"><strong>While</strong></span>: The task or Job is
										carried until the condition is met.</p>
								</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>For</strong></span>
									</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>From</em></span>
									</p>
								</td><td valign="top">
									<p>Type in the first instance number which the loop should
										start from. A start instance number of 2 with a step of 2
										means the loop takes on every even number instance.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>To</em></span>
									</p>
								</td><td valign="top">
									<p>Type in the last instance number which the loop should
										finish with.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Step</em></span>
									</p>
								</td><td valign="top">
									<p>Type in the step the loop should be incremented of. A step
										of 2 means every second instance.</p>
								</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>While</strong></span>
									</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Declaration</em></span>
									</p>
								</td><td valign="top">
									<p>Type in an expression initiating the loop.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Condition</em></span>
									</p>
								</td><td valign="top">
									<p>Type in the condition that should be met for the loop to
										end.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Iteration</em></span>
									</p>
								</td><td valign="top">
									<p>Type in the expression showing the operation to be
										performed at each loop.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Values are increasing</em></span>
									</p>
								</td><td valign="top">
									<p>Select this check box to only allow an increasing
										sequence. Deselect this check box to only allow a decreasing
										sequence.</p>
								</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>Usage</strong></span>
									</p>
								</td><td colspan="2" valign="top">
									<p><span class="bold"><strong>tLoop</strong></span> is to be used as a
										start component and can only be used with an iterate
										connection to the next component.</p>
								</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>Global Variables</strong></span>
									</p>
								</td><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p><span class="bold"><strong>Current value</strong></span>: Indicates
										the current value. This is available as a <span class="bold"><strong>Flow</strong></span> variable.</p>
									<p> Returns an integer. </p>
									<p> </p>
									<p><span class="bold"><strong>Current iteration</strong></span>:
										Indicates the number of the current iteration. This is
										available as a <span class="bold"><strong>Flow</strong></span>
										variable</p>
									<p> Returns an integer.</p>
									<p>The CURRENT_VALUE variable is available only in case of a
											<span class="bold"><strong>For</strong></span> type loop.</p>
									<p>For further information about variables, see <span class="bluebold">Talend Open Studio</span> User Guide.</p>
								</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>Connections</strong></span>
									</p>
								</td><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>Outgoing links (from one component to another):</p>
									<p>
										<span class="bold"><strong>Row</strong></span>: Iterate.</p>
									<p>
										<span class="bold"><strong>Trigger</strong></span>: On Subjob Ok; On
										Subjob Error; Run if; On Component Ok; On Component
										Error.</p>
									<p> </p>
									<p> Incoming links (from one component to another):</p>
									<p>
										<span class="bold"><strong>Row</strong></span>: Iterate; </p>
									<p>
										<span class="bold"><strong>Trigger</strong></span>: On Subjob Ok; On
										Subjob Error; Run if; On Component Ok; On Component Error;
										Synchronize; Parallelize.</p>
									<p> </p>
									<p> For further information regarding connections, see
											<span class="bluebold">Talend Open Studio</span> User Guide.</p>
								</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>Limitation</strong></span>
									</p>
								</td><td colspan="2" valign="top">
									<p> n/a</p>
								</td></tr></tbody></table></div></div><div class="section" title="Scenario: Job execution in a loop"><div class="titlepage"><div><div><h3 class="title"><a name="Raa73244"></a>Scenario: Job execution in a loop</h3></div></div></div><p>This scenario describes a Job composed of a parent Job and a child Job. The
					parent Job implements a loop which executes n times a child Job, with a pause
					between each execution.</p><div class="mediaobject"><img src="../images/Use_Case_tFor1.png"></div><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>In the parent Job, drop a <span class="bold"><strong>tLoop</strong></span>, a
								<span class="bold"><strong>tRunJob</strong></span> and a <span class="bold"><strong>tSleep</strong></span> component from the <span class="bold"><strong>Palette</strong></span> to the design workspace.</p></li><li class="listitem"><p>Connect the <span class="bold"><strong>tLoop</strong></span> to the <span class="bold"><strong>tRunJob</strong></span> using an <span class="bold"><strong>Iterate</strong></span> connection.</p></li><li class="listitem"><p>Then connect the <span class="bold"><strong>tRunJob</strong></span> to a
								<span class="bold"><strong>tSleep</strong></span> component using a <span class="bold"><strong>Row</strong></span> connection.</p></li><li class="listitem"><p>On the child Job, drop the following components: <span class="bold"><strong>tPOP</strong></span>, <span class="bold"><strong>tFileInputMail</strong></span>
							and <span class="bold"><strong>tLogRow</strong></span> the same way.</p></li><li class="listitem"><p>On the <span class="bold"><strong>Basic settings</strong></span> panel of the
								<span class="bold"><strong>tLoop</strong></span> component, type in the
							instance number to start from (<span class="emphasis"><em>1</em></span>), the instance
							number to finish with (<span class="emphasis"><em>5</em></span>) and the step
								(<span class="emphasis"><em>1</em></span>)</p></li><li class="listitem"><p>On the <span class="bold"><strong>Basic settings</strong></span> panel of the
								<span class="bold"><strong>tRunJob</strong></span> component, select the child
							Job in the list of stored Jobs offered. In this example:
								<span class="emphasis"><em>popinputmail</em></span></p></li><li class="listitem"><p>Select the context if relevant. In this use case, the context is
								<span class="emphasis"><em>default</em></span> with no variables stored.</p></li><li class="listitem"><p>In the <span class="bold"><strong>tSleep</strong></span>
							<span class="bold"><strong>Basic settings</strong></span> panel, type in the
							time-off value in second. In this example, type in <span class="emphasis"><em>3
								seconds</em></span> in the <span class="bold"><strong>Pause</strong></span>
							field.</p></li><li class="listitem"><p>Then in the child Job, define the connection parameters to the pop
							server, on the <span class="bold"><strong>Basic settings</strong></span> panel.
						</p></li><li class="listitem"><p>In the <span class="bold"><strong>tFileInputMail</strong></span>
							<span class="bold"><strong>Basic settings</strong></span> panel, select a global
							variable as <span class="bold"><strong>File Name</strong></span>, to collect the
							current file in the directory defined in the <span class="bold"><strong>tPOP</strong></span> component. Press <span class="bold"><strong>Ctrl+Space
								bar</strong></span> to access the variable list. In this example, the
							variable to be used is:
								<code class="code">((String)globalMap.get("tPOP_1_CURRENT_FILEPATH"))</code></p></li><li class="listitem"><p>Define the <span class="bold"><strong>Schema</strong></span>, for it to include
							the mail element to be processed, such as <span class="emphasis"><em>author</em></span>,
								<span class="emphasis"><em>topic</em></span>, <span class="emphasis"><em>delivery date</em></span> and
								<span class="emphasis"><em>number of lines</em></span>.</p></li><li class="listitem"><p>In the <span class="bold"><strong>Mail Parts</strong></span> table, type in the
							corresponding <span class="bold"><strong>Mail part</strong></span> for each column
							defined in the schema. ex: <span class="emphasis"><em>author</em></span> comes from the
								<span class="emphasis"><em>From</em></span> part of the email file.</p></li><li class="listitem"><p>Then connect the <span class="bold"><strong>tFileInputMail</strong></span> to a
								<span class="bold"><strong>tLogRow</strong></span> to check out the execution
							result on the <span class="bold"><strong>Run</strong></span> view.</p></li><li class="listitem"><p>Press <span class="bold"><strong>F6</strong></span> to run the Job.</p></li></ul></div></div></div></body></html>