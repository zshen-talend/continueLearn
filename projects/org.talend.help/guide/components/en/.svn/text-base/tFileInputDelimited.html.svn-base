<html><head>
      <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
   <title>tFileInputDelimited</title><meta name="generator" content="DocBook XSL-NS Stylesheets V1.76.1"><link rel="home" href="index.html" title="Talend Open Studio"><link rel="up" href="ch10.html" title="Chapter&nbsp;10.&nbsp;File components"><link rel="prev" href="tFileInputARFF.html" title="tFileInputARFF"><link rel="next" href="tFileInputEBCDIC.html" title="tFileInputEBCDIC"></head><body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF"><div lang="EN" class="section" title="tFileInputDelimited"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="tFileInputDelimited"></a>tFileInputDelimited</h2></div></div></div><div class="mediaobject"><img src="../images/tFileInputDelimited.png"></div><div class="section" title="tFileInputDelimited properties"><div class="titlepage"><div><div><h3 class="title"><a name="Raa86313-dup-2"></a>tFileInputDelimited properties</h3></div></div></div><div class="informaltable"><table border="1"><colgroup><col class="c1"><col class="c2"><col class="c3"></colgroup><tbody><tr><td valign="top">
									<p>
										<span class="bold"><strong>Component family</strong></span>
									</p>
								</td><td valign="top">
									<p>File/Input</p>
								</td><td valign="top">&nbsp;</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>Function</strong></span>
									</p>
								</td><td rowspan="2" colspan="2" valign="top">
									<p><span class="bold"><strong>tFileInputDelimited</strong></span> reads
										a given file row by row with simple separated fields.</p>
									<p>Opens a file and reads it row by row to split them up into
										fields then sends fields as defined in the Schema to the
										next Job component, via a Row link.</p>
								</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>Purpose</strong></span>
									</p>
								</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>Basic settings</strong></span>
									</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Property type</em></span>
									</p>
								</td><td valign="top">
									<p>Either <span class="bold"><strong>Built-in</strong></span> or
											<span class="bold"><strong>Repository</strong></span>. </p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p><span class="bold"><strong>Built-in</strong></span>: No property
										data stored centrally.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p><span class="bold"><strong>Repository</strong></span>: Select the
										repository file where the properties are stored. The fields
										that follow are completed automatically using the data
										retrieved.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>File Name/Stream</em></span>
									</p>
								</td><td valign="top">
									<p><span class="bold"><strong>File name</strong></span>: Name and path
										of the file to be processed. </p>
									<p>
										<span class="bold"><strong>Stream: </strong></span>The data flow to be
										processed. The data must be added to the flow in order for
											<span class="bold"><strong>tFileInputDelimited </strong></span>to
										fetch these data via the corresponding representative
										variable.</p>
									<p> This variable could be already pre-defined in your Studio
										or provided by the context or the components you are using
										along with this component; otherwise, you could define it
										manually and use it according to the design of your Job, for
										example, using <span class="bold"><strong>tJava</strong></span> or
											<span class="bold"><strong>tJavaFlex</strong></span>.</p>
									<p> In order to avoid the inconvenience of hand writing, you
										could select the variable of interest from the
										auto-completion list (<span class="bold"><strong>Ctrl+Space</strong></span>) to fill the current field on
										condition that this variable has been properly
										defined.</p>
									<p> </p>
									<p> Related topic to the available variables: see <span class="bluebold">Talend Open Studio</span>
										<span class="bold"><strong>User Guide</strong></span></p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Row separator</em></span>
									</p>
								</td><td valign="top">
									<p>String (ex: &#8220;\n&#8221;on Unix) to distinguish rows.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Field separator</em></span>
									</p>
								</td><td valign="top">
									<p>Character, string or regular expression to separate
										fields.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>CSV options</em></span>
									</p>
								</td><td valign="top">
									<p>Select this check box to include CSV specific parameters
										such as <span class="bold"><strong>Escape char</strong></span> and
											<span class="bold"><strong>Text enclosure</strong></span>.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Header</em></span>
									</p>
								</td><td valign="top">
									<p>Number of rows to be skipped in the beginning of
										file.</p>
									<p> </p>

								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Footer</em></span>
									</p>
								</td><td valign="top">
									<p>Number of rows to be skipped at the end of the
										file.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Limit</em></span>
									</p>
								</td><td valign="top">
									<p>Maximum number of rows to be processed. If Limit = 0, no
										row is read or processed.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p><span class="emphasis"><em>Schema</em></span> and <span class="emphasis"><em>Edit
											Schema</em></span></p>
								</td><td valign="top">
									<p>A schema is a row description, i.e., it defines the number
										of fields that will be processed and passed on to the next
										component. The schema is either built-in or remote in the
										Repository. </p>
									<p> Click <span class="bold"><strong>Edit Schema</strong></span> to
										make changes to the schema. Note that if you make changes,
										the schema automatically becomes built-in.</p>
									<p> Click <span class="bold"><strong>Sync columns</strong></span> to
										retrieve the schema from the previous component connected in
										the Job.</p>
									<p> </p>

								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p><span class="bold"><strong>Built-in</strong></span>: The schema will
										be created and stored locally for this component only.
										Related topic: see <span class="bluebold">Talend Open Studio</span>
										<span class="bold"><strong>User Guide</strong></span>.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p><span class="bold"><strong>Repository</strong></span>: The schema
										already exists and is stored in the Repository, hence can be
										reused in various projects and Job flowcharts. Related
										topic: see <span class="bluebold">Talend Open Studio</span>
										<span class="bold"><strong>User Guide</strong></span>.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Skip empty rows</em></span>
									</p>
								</td><td valign="top">
									<p>Select this check box to skip empty rows.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Uncompress as zip file</em></span>
									</p>
								</td><td valign="top">
									<p>Select this check box to uncompress the input file.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Die on error</em></span>
									</p>
								</td><td valign="top">
									<p>Select this check box to stop the execution of the Job
										when an error occurs. Clear the check box to skip the row on
										error and complete the process for error-free rows. If
										needed, you can collect the rows on error using a <span class="bold"><strong>Row</strong></span> &gt; <span class="bold"><strong>Reject</strong></span> link.</p>
								</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>Advanced settings</strong></span>
									</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Advanced separator (for numbers)</em></span>
									</p>
								</td><td valign="top">
									<p>Select this check box to modify the separators used for
										numbers:</p>
									<p>
										<span class="bold"><strong>Thousands separator</strong></span>: define
										separators for thousands.</p>
									<p>
										<span class="bold"><strong>Decimal separator</strong></span>: define
										separators for decimals.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Extract lines at random</em></span>
									</p>
								</td><td valign="top">
									<p>Select this check box to set the number of lines to be
										extracted randomly.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Encoding</em></span>
									</p>
								</td><td valign="top">
									<p>Select the encoding type from the list or select <span class="bold"><strong>Custom</strong></span> and define it manually.
										This field is compulsory for DB data handling.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Trim all column</em></span>
									</p>
								</td><td valign="top">
									<p>Select this check box to remove leading and trailing
										whitespace from all columns.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Check each row structure against schema</em></span>
									</p>
								</td><td valign="top">
									<p>Select this check box to synchronize every row against the
										input schema.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Check date</em></span>
									</p>
								</td><td valign="top">
									<p>Select this check box to check the date format strictly
										against the input schema.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Check columns to trim</em></span>
									</p>
								</td><td valign="top">
									<p>Select the check box next to the column name you want to
										remove leading and trailing whitespace from.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Split row before field</em></span>
									</p>
								</td><td valign="top">
									<p>Select this check box to split rows before splitting
										fields.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>tStatCatcher Statistics</em></span>
									</p>
								</td><td valign="top">
									<p>Select this check box to gather the processing metadata at
										the Job level as well as at each component level.</p>
								</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>Usage</strong></span>
									</p>
								</td><td colspan="2" valign="top">
									<p>Use this component to read a file and separate fields
										contained in this file using a defined separator. It allows
										you to create a data flow using a <span class="bold"><strong>Row
											&gt; Main</strong></span> link or via a <span class="bold"><strong>Row &gt; Reject</strong></span> link in which case the the
										data is filtered by data that doesn&#8217;t correspond to the type
										defined. For further information, please see <a class="xref" href="tExtractXMLField.html#Raa91776" title="Scenario 2: Extracting correct and erroneous data from an XML field in a delimited file">the section called &#8220;Scenario 2: Extracting correct and erroneous data from an XML field in a
					delimited file&#8221;</a>.</p>
								</td></tr></tbody></table></div></div><div class="section" title="Scenario: Delimited file content display"><div class="titlepage"><div><div><h3 class="title"><a name="Raa34575-dup-2"></a>Scenario: Delimited file content display</h3></div></div></div><p>The following scenario creates a two-component Job, which aims at reading each
					row of a file, selecting delimited data and displaying the output in the
						<span class="bold"><strong>Run</strong></span> log console.</p><div class="mediaobject"><img src="../images/UseCase_tFileInputDelimited1.png"></div><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p> Drop a <span class="bold"><strong>tFileInputDelimited</strong></span> component
							from the <span class="bold"><strong>Palette</strong></span> to the design
							workspace.</p></li><li class="listitem"><p> Drop a <span class="bold"><strong>tLogRow</strong></span> component the same
							way.</p></li><li class="listitem"><p> Right-click on the <span class="bold"><strong>tFileInputDelimited</strong></span> component and select <span class="bold"><strong>Row</strong></span> &gt; <span class="bold"><strong>Main</strong></span>. Then drag it onto the <span class="bold"><strong>tLogRow</strong></span> component and release when the plug symbol shows
							up.</p></li><li class="listitem"><p> Select the <span class="bold"><strong>tFileInputDelimited</strong></span>
							component again, and define its Basic settings:</p></li></ul></div><div class="mediaobject"><img src="../images/UseCase_tFileInputDelimited.png"></div><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p> Fill in a path to the file in the <span class="bold"><strong>File
								Name</strong></span> field. This field is mandatory.</p></li></ul></div><div class="warning" title="Warning" style="margin-left: 0.5in; margin-right: 0.5in;"><table border="0" summary="Warning"><tr><td rowspan="2" align="center" valign="top" width="16pt"><img alt="[Warning]" src="../images/warning.png"></td><th align="left"></th></tr><tr><td align="left" valign="top"><p>
						<span class="italic"> If the path of the file contains some accented
							characters, you will get an error message when executing your Job. For
							more information regarding the procedures to follow when the support of
							accented characters is missing, see <span class="bluebold">
								Talend Open Studio
							</span>
							<span class="bold"><strong>Installation Guide</strong></span>.</span>
					</p></td></tr></table></div><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p> Define the <span class="bold"><strong>Row separator</strong></span> allowing to
							identify the end of a row. Then define the <span class="bold"><strong>Field
								separator</strong></span> used to delimit fields in a row.</p></li><li class="listitem"><p> In this scenario, the header and footer limits are not set. And the
								<span class="bold"><strong>Limit</strong></span> number of processed rows is
							set on 50. </p></li><li class="listitem"><p> Set the <span class="bold"><strong>Schema</strong></span> as either a local
								(<span class="bold"><strong>Built-in</strong></span>) or a remotely managed
								(<span class="bold"><strong>Repository</strong></span>) to define the data to
							pass on to the <span class="bold"><strong>tLogRow</strong></span> component.
						</p></li><li class="listitem"><p> You can load and/or edit the schema via the <span class="bold"><strong>Edit Schema</strong></span> function. </p></li></ul></div><p>Related topics: see <span class="bluebold">Talend Open Studio</span>
					<span class="bold"><strong>User Guide</strong></span>.</p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p> As selected, the empty rows will be ignored.</p></li><li class="listitem"><p> Enter the encoding standard the input file is encoded in. This
							setting is meant to ensure encoding consistency throughout all input and
							output files.</p></li><li class="listitem"><p> Select the <span class="bold"><strong>tLogRow</strong></span> and define the
								<span class="bold"><strong>Field separator </strong></span>to use for the
							output display. Related topic: <a class="xref" href="tLogRow.html" title="tLogRow">the section called &#8220;tLogRow&#8221;</a>.</p></li><li class="listitem"><p> Select the <span class="bold"><strong>Print schema column name in front of
								each value</strong></span> check box to retrieve the column labels in the
							output displayed.</p></li><li class="listitem"><p> Go to <span class="bold"><strong>Run</strong></span> tab, and click on
								<span class="bold"><strong>Run</strong></span> to execute the Job.</p></li></ul></div><p>The file is read row by row and the extracted fields are displayed on the
						<span class="bold"><strong>Run</strong></span> log as defined in both components
						<span class="bold"><strong>Basic settings</strong></span>.</p><div class="mediaobject"><img src="../images/UseCase_tFileInputDelimited3.png"></div><p>The Log sums up all parameters in a header followed by the result of the
					Job.</p></div><div class="section" title="Scenario 2: Reading data from a remote file in streaming mode"><div class="titlepage"><div><div><h3 class="title"><a name="Raa47862"></a>Scenario 2: Reading data from a remote file in streaming mode</h3></div></div></div><p>This scenario describes a four component Job used to fetch data from a
					voluminous file almost as soon as it has been read. The data is displayed in the
						<span class="bold"><strong>Run</strong></span> view. The advantage of this technique
					is that you do not have to wait for the entire file to be downloaded, before
					viewing the data. </p><div class="mediaobject"><img src="../images/Use_Case_tFileInputDelimited2_1.png"></div><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p> Drop the following components onto the workspace: <span class="bold"><strong>tFileFetch</strong></span>, <span class="bold"><strong>tSleep</strong></span>, <span class="bold"><strong>tFileInputDelimited</strong></span>, and <span class="bold"><strong>tLogRow</strong></span>.</p></li><li class="listitem"><p> Connect <span class="bold"><strong>tSleep</strong></span> and <span class="bold"><strong>tFileInputDelimited</strong></span> using a <span class="bold"><strong>Trigger</strong></span> &gt; <span class="bold"><strong>OnComponentOk</strong></span> link and connect <span class="bold"><strong>tFileInputDelimited</strong></span> to <span class="bold"><strong>tLogRow</strong></span> using a <span class="bold"><strong>Row</strong></span>
							&gt; <span class="bold"><strong>Main</strong></span> link.</p></li><li class="listitem"><p> Double-click <span class="bold"><strong>tFileFetch</strong></span> to display
							the <span class="bold"><strong>Basic settings</strong></span> tab in the <span class="bold"><strong>Component</strong></span> view and set the properties.</p></li></ul></div><div class="mediaobject"><img src="../images/Use_Case_tFileInputDelimited2_2.png"></div><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p> From the <span class="bold"><strong>Protocol</strong></span> list, select the
							appropriate protocol to access the server on which your data is
							stored.</p></li><li class="listitem"><p> In the <span class="bold"><strong>URI</strong></span> field, enter the URI
							required to access the server on which your file is stored.</p></li><li class="listitem"><p> Select the <span class="bold"><strong>Use cache to save the
								resource</strong></span> check box to add your file data to the cache
							memory. This option allows you to use the streaming mode to transfer the
							data.</p></li><li class="listitem"><p> In the workspace, click on <span class="bold"><strong>tSleep</strong></span> to
							display the <span class="bold"><strong>Basic settings</strong></span> tab in the
								<span class="bold"><strong>Component</strong></span> view and set the
							properties.</p></li><li class="listitem"><p> By default, <span class="bold"><strong>tSleep</strong></span>&#8217;s <span class="bold"><strong>Pause</strong></span> field is set to <span class="emphasis"><em>1</em></span>
							second. Do not change this setting. It pauses the second Job in order to
							give the first Job, containing <span class="bold"><strong>tFileFetch</strong></span>, the time to read the file data. </p></li><li class="listitem"><p> In the workspace, double-click <span class="bold"><strong>tFileInputDelimited</strong></span> to display its <span class="bold"><strong>Basic settings</strong></span> tab in the <span class="bold"><strong>Component</strong></span> view and set the properties.</p></li></ul></div><div class="mediaobject"><img src="../images/Use_Case_tFileInputDelimited2_3.png"></div><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p> In the <span class="bold"><strong>File name/Stream</strong></span>
							field:</p><p> - Delete the default content</p><p> - Press <span class="bold"><strong>Ctrl+Space</strong></span> to view the
							variables available for this component.</p><p> - Select <span class="emphasis"><em>tFileFetch_1_INPUT_STREAM</em></span> from the
							auto-completion list, to add the following variable to the <span class="bold"><strong>Filename</strong></span> field:
								<code class="code">((java.io.InputStream)globalMap.get("tFileFetch_1_INPUT_STREAM"))</code>.</p></li><li class="listitem"><p> From the <span class="bold"><strong>Schema</strong></span> list, select
								<span class="bold"><strong>Built-in</strong></span> and click <span class="bold"><strong>[...]</strong></span> next to the <span class="bold"><strong>Edit
								schema</strong></span> field to describe the structure of the file that
							you want to fetch. The <span class="emphasis"><em>US_Employees</em></span> file is
							composed of six colonnes: <span class="emphasis"><em>ID</em></span>,
								<span class="emphasis"><em>Employee</em></span>, <span class="emphasis"><em>Age</em></span>,
								<span class="emphasis"><em>Address</em></span>, <span class="emphasis"><em>State</em></span>,
								<span class="emphasis"><em>EntryDate</em></span>. </p></li></ul></div><div class="mediaobject"><img src="../images/Use_Case_tFileInputDelimited2_4.png"></div><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p> Click <span class="bold"><strong>[+]</strong></span> to add the six columns and
							set them as indicated in the above screenshot. Click <span class="bold"><strong>OK</strong></span>.</p></li><li class="listitem"><p> In the workspace, double-click<span class="bold"><strong>
								tLogRow</strong></span> to display its <span class="bold"><strong>Basic
								settings</strong></span> in the <span class="bold"><strong>Component</strong></span> view and set its properties.</p></li><li class="listitem"><p> Click <span class="bold"><strong>Edit schema</strong></span> and ensure that
							the schema has been fetched from the preceding component. If it hasn&#8217;t,
							click <span class="bold"><strong>Sync Columns</strong></span> to fetch it.</p></li><li class="listitem"><p> Click on the <span class="bold"><strong>Job</strong></span> tab and then on the
								<span class="bold"><strong>Extra</strong></span> view.</p></li></ul></div><div class="mediaobject"><img src="../images/Use_Case_tFileInputDelimited2_5.png"></div><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p> Select the <span class="bold"><strong>Multi thread execution</strong></span>
							check box in order to run the two Jobs at the same time. Bear in mind
							that the second Job has a one second delay according to the properties
							set in <span class="bold"><strong>tSleep</strong></span>. This option allows you
							to fetch the data almost as soon as it is read by <span class="bold"><strong>tFileFetch</strong></span>, thanks to the <span class="bold"><strong>tFileDelimited</strong></span> component.</p></li><li class="listitem"><p> Save the Job and press <span class="bold"><strong>F6</strong></span> to run it.
						</p></li></ul></div><div class="mediaobject"><img src="../images/Use_Case_tFileInputDelimited2_6.png"></div><p>The data is displayed in the console as almost as soon as it is read.</p></div></div></body></html>