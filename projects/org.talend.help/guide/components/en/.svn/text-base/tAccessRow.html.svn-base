<html><head>
      <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
   <title>tAccessRow</title><meta name="generator" content="DocBook XSL-NS Stylesheets V1.76.1"><link rel="home" href="index.html" title="Talend Open Studio"><link rel="up" href="Raa29876.html" title="Chapter&nbsp;6.&nbsp;Database components"><link rel="prev" href="tAccessRollback.html" title="tAccessRollback"><link rel="next" href="tAS400Close.html" title="tAS400Close"></head><body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF"><div lang="EN" class="section" title="tAccessRow"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="tAccessRow"></a>tAccessRow</h2></div></div></div><div class="mediaobject"><img src="../images/tAccessRow_icon32_white.png"></div><div class="section" title="tAccessRow properties"><div class="titlepage"><div><div><h3 class="title"><a name="d0e60863"></a>tAccessRow properties</h3></div></div></div><div class="informaltable"><table border="1"><colgroup><col class="c1"><col class="c2"><col class="c3"></colgroup><tbody><tr><td valign="top">
									<p>
										<span class="bold"><strong>Component family</strong></span>
									</p>
								</td><td valign="top">
									<p>Databases/Access</p>
								</td><td valign="top">&nbsp;</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>Function</strong></span>
									</p>
								</td><td colspan="2" valign="top">
									<p><span class="bold"><strong>tAccessRow</strong></span> is the
										specific component for this database query. It executes the
										SQL query stated onto the specified database. The row suffix
										means the component implements a flow in the job design
										although it doesn&#8217;t provide output.</p>
								</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>Purpose</strong></span>
									</p>
								</td><td colspan="2" valign="top">
									<p>Depending on the nature of the query and the database,
											<span class="bold"><strong>tAccessRow</strong></span> acts on the
										actual DB structure or on the data (although without
										handling data). The SQLBuilder tool helps you write easily
										your SQL statements.</p>
								</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>Basic settings</strong></span>
									</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Property type</em></span>
									</p>
								</td><td valign="top">
									<p>Either <span class="bold"><strong>Built-in</strong></span> or
											<span class="bold"><strong>Repository</strong></span>. </p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p><span class="bold"><strong>Built-in</strong></span>: No property
										data stored centrally.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p><span class="bold"><strong>Repository</strong></span>: Select the
										repository file in which the properties are stored. The
										fields that follow are completed automatically using the
										data retrieved.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Use an existing connection</em></span>
									</p>
								</td><td valign="top">
									<p>Select this check box and select the appropriate <span class="bold"><strong>tAccessConnection</strong></span> component from
										the <span class="bold"><strong>Component list </strong></span>if you
										want to re-use connection parameters that you have already
										defined.</p>
									<div class="note" title="Note" style="margin-left: 0.5in; margin-right: 0.5in;"><table border="0" summary="Note"><tr><td rowspan="2" align="center" valign="top" width="16pt"><img alt="[Note]" src="../images/note.png"></td><th align="left"></th></tr><tr><td align="left" valign="top"><p>When a Job contains the parent Job and the child Job,
												<span class="bold"><strong>Component list</strong></span>
											presents only the connection components in the same Job
											level, so if you need to use an existing connection from
											the other level, make sure that the available connection
											components are sharing the intended connection.</p><p>For more information on how to share a DB connection
											across Job levels, see <span class="bold"><strong>Use or
												register a shared DB connection</strong></span> in any
											database connection component corresponding to the
											database you are using.</p><p>Otherwise, you can as well deactivate the connection
											components and use <span class="bold"><strong>Dynamic
												settings</strong></span> of the component to specify the
											intended connection manually. In this case, make sure
											the connection name is unique and distinctive all over
											through the two Job levels. For more information about
												<span class="bold"><strong>Dynamic settings</strong></span>,
											see your studio user guide.</p></td></tr></table></div>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>DB Version</em></span>
									</p>
								</td><td valign="top">
									<p>Select the Access database version that you are
										using.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Database</em></span>
									</p>
								</td><td valign="top">
									<p>Name of the database</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p><span class="emphasis"><em>Username</em></span> and
											<span class="emphasis"><em>Password</em></span></p>
								</td><td valign="top">
									<p>DB user authentication data.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p><span class="emphasis"><em>Schema</em></span> and <span class="emphasis"><em>Edit
											Schema</em></span></p>
								</td><td valign="top">
									<p>A schema is a row description, i.e., it defines the number
										of fields to be processed and passed on to the next
										component. The schema is either <span class="bold"><strong>Built-in</strong></span> or stored remotely in the <span class="bold"><strong>Repository</strong></span>. </p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p><span class="bold"><strong>Built-in</strong></span>: The schema is
										created and stored locally for this component only. Related
										topic: see <span class="bluebold">Talend Open Studio</span>
										<span class="bold"><strong>User Guide</strong></span>.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p><span class="bold"><strong>Repository</strong></span>: The schema
										already exists and is stored in the Repository, hence can be
										reused. Related topic: see <span class="bluebold">Talend Open Studio</span>
										<span class="bold"><strong>User Guide</strong></span>.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Table Name</em></span>
									</p>
								</td><td valign="top">
									<p>Name of the source table where changes made to data should
										be captured.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Query type</em></span>
									</p>
								</td><td valign="top">
									<p>Either <span class="bold"><strong>Built-in</strong></span> or
											<span class="bold"><strong>Repository</strong></span>. </p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p><span class="bold"><strong>Built-in</strong></span>: Fill in
										manually the query statement or build it graphically using
										SQLBuilder</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p><span class="bold"><strong>Repository</strong></span>: Select the
										relevant query stored in the Repository. The Query field
										gets accordingly filled in.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Query</em></span>
									</p>
								</td><td valign="top">
									<p>Enter your DB query paying particularly attention to
										properly sequence the fields in order to match the schema
										definition. </p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Commit every</em></span>
									</p>
								</td><td valign="top">
									<p>Number of rows to be completed before committing batches
										of rows together into the DB. This option ensures
										transaction quality (but not rollback) and above all better
										performance on executions.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Die on error</em></span>
									</p>
								</td><td valign="top">
									<p>This check box is selected by default. Clear the check box
										to skip the row on error and complete the process for
										error-free rows. If needed, you can retrieve the rows on
										error via a <span class="bold"><strong>Row</strong></span> &gt;
											<span class="bold"><strong>Rejects</strong></span> link.</p>
								</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>Advanced settings</strong></span>
									</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Propagate QUERY&#8217;s recordset</em></span>
									</p>
								</td><td valign="top">
									<p>Select this check box to insert the result of the query
										into a COLUMN of the current flow. Select this column from
										the <span class="bold"><strong>use column</strong></span> list.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Use PreparedStatement</em></span>
									</p>
								</td><td valign="top">
									<p>Select this check box if you want to query the database
										using a PreparedStatement. In the <span class="bold"><strong>Set
											PreparedStatement Parameter </strong></span>table, define the
										parameters represented by &#8220;?&#8221; in the SQL instruction of the
											<span class="bold"><strong>Query</strong></span> field in the
											<span class="bold"><strong>Basic Settings</strong></span>
										tab.</p>
									<p>
										<span class="bold"><strong>Parameter Index</strong></span>: Enter the
										parameter position in the SQL instruction.</p>
									<p>
										<span class="bold"><strong>Parameter Type</strong></span>: Enter the
										parameter type.</p>
									<p>
										<span class="bold"><strong>Parameter Value</strong></span>: Enter the
										parameter value.</p>
									<p> </p>
									<div class="note" title="Note" style="margin-left: 0.5in; margin-right: 0.5in;"><table border="0" summary="Note"><tr><td rowspan="2" align="center" valign="top" width="16pt"><img alt="[Note]" src="../images/note.png"></td><th align="left"></th></tr><tr><td align="left" valign="top"><p>This option is very useful if you need to execute the
											same query several times. Performance levels are
											increased</p></td></tr></table></div>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>Commit every</em></span>
									</p>
								</td><td valign="top">
									<p>Number of rows to be completed before committing batches
										of rows together into the DB. This option ensures
										transaction quality (but not rollback) and above all better
										performance on executions.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p>
										<span class="emphasis"><em>tStat</em></span>
										<span class="emphasis"><em>Catcher Statistics</em></span>
									</p>
								</td><td valign="top">
									<p>Select this check box to collect log data at the component
										level.</p>
								</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>Usage</strong></span>
									</p>
								</td><td colspan="2" valign="top">
									<p>This component offers the flexibility of the DB query and
										covers all possible SQL queries.</p>
								</td></tr></tbody></table></div></div><div class="section" title="Related scenarios"><div class="titlepage"><div><div><h3 class="title"><a name="d0e61439"></a>Related scenarios</h3></div></div></div><p>For related topics, see:</p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>
							<a class="xref" href="tDBSQLRow.html#Raa17909" title="Scenario: Resetting a DB auto-increment">the section called &#8220;Scenario: Resetting a DB auto-increment&#8221;</a>
						</p></li><li class="listitem"><p><a class="xref" href="tMysqlRow.html#Raa11099" title="Scenario 1: Removing and regenerating a MySQL table index">the section called &#8220;Scenario 1: Removing and regenerating a MySQL table index&#8221;</a>.</p></li></ul></div></div></div></body></html>