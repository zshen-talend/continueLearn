<html><head>
      <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
   <title>tMysqlInvalidRows</title><meta name="generator" content="DocBook XSL-NS Stylesheets V1.76.1"><link rel="home" href="index.html" title="Talend Enterprise"><link rel="up" href="Raa78577.html" title="Chapter&nbsp;5.&nbsp;Data Quality components"><link rel="prev" href="tMultiPatternCheck.html" title="tMultiPatternCheck"><link rel="next" href="tMysqlValidRows.html" title="tMysqlValidRows"></head><body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF"><div lang="EN" class="section" title="tMysqlInvalidRows"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="tMysqlInvalidRows"></a>tMysqlInvalidRows</h2></div></div></div><div class="mediaobject"><img src="../images/tMysqlInvalidRows_icon32_white.png"></div><div class="warning" title="Warning" style="margin-left: 0.5in; margin-right: 0.5in;"><table border="0" summary="Warning"><tr><td rowspan="2" align="center" valign="top" width="16pt"><img alt="[Warning]" src="../images/warning.png"></td><th align="left"></th></tr><tr><td align="left" valign="top"><p><span class="italic">This component will be available in the <span class="bold"><strong>Palette</strong></span> of the studio on the condition that you have subscribed to
                the relevant edition of <span class="bluebold">Talend Enterprise Data Quality</span>.</span></p></td></tr></table></div><div class="section" title="tMysqlInvalidRows properties"><div class="titlepage"><div><div><h3 class="title"><a name="d0e63341"></a>tMysqlInvalidRows properties</h3></div></div></div><div class="informaltable"><table border="1"><colgroup><col class="c1"><col class="c2"><col class="c3"></colgroup><tbody><tr><td valign="top"><p><span class="bold"><strong>Component
                                family</strong></span></p>
                        </td><td valign="top"><p>Data Quality</p>
                        </td><td valign="top">&nbsp;</td></tr><tr><td valign="top"><p><span class="bold"><strong>Function</strong></span></p>
                        </td><td colspan="2" valign="top"><p><span class="bold"><strong>tMysqlInvalidRows</strong></span> checks database rows against
                                specific <span class="bluebold">Talend Enterprise Data Quality</span> database patterns.</p>
                        </td></tr><tr><td valign="top"><p><span class="bold"><strong>Purpose</strong></span></p>
                        </td><td colspan="2" valign="top"><p><span class="bold"><strong>tMysqlInvalidRows</strong></span> allows you to extract DB rows that
                                do not match a given data quality pattern, You can then implement
                                any required correction.</p>
                        </td></tr><tr><td valign="top"><p><span class="bold"><strong>Basic
                                settings</strong></span></p>
                        </td><td valign="top"><p><span class="emphasis"><em>Property type</em></span></p>
                        </td><td valign="top"><p>Either <span class="bold"><strong>Built-in</strong></span>
                                or <span class="bold"><strong>Repository</strong></span>.</p>
                        </td></tr><tr><td><p>&nbsp;</p>
                        </td><td><p>&nbsp;</p>
                        </td><td valign="top"><p><span class="bold"><strong>Built-in</strong></span>: No
                                property data stored centrally.</p>
                        </td></tr><tr><td><p>&nbsp;</p>
                        </td><td><p>&nbsp;</p>
                        </td><td valign="top"><p><span class="bold"><strong>Repository</strong></span>:
                                Select the repository file where Properties are stored. The fields
                                that come after are pre-filled in using the fetched data.</p>
                        </td></tr><tr><td><p>&nbsp;</p>
                        </td><td valign="top"><p><span class="emphasis"><em>Use an existing
                                connection</em></span></p>
                        </td><td valign="top"><p>Select this check box when using a configured
                                    <span class="bold"><strong>tMysqlConnection</strong></span>.</p><p> </p>
                            <div class="note" title="Note" style="margin-left: 0.5in; margin-right: 0.5in;"><table border="0" summary="Note"><tr><td rowspan="2" align="center" valign="top" width="16pt"><img alt="[Note]" src="../images/note.png"></td><th align="left"></th></tr><tr><td align="left" valign="top"><p>When a Job contains the parent Job and the child Job,
                                        <span class="bold"><strong>Component list</strong></span> presents
                                    only the connection components in the same Job level, so if you
                                    need to use an existing connection from the other level, make
                                    sure that the available connection components are sharing the
                                    intended connection.</p><p>For more information on how to share a DB connection across
									Job levels, see <span class="bold"><strong>Use or register a shared
										DB connection</strong></span> in any database connection
									component corresponding to the database you are using, in <a class="xref" href="Raa29876.html" title="Chapter&nbsp;6.&nbsp;Database components">Chapter&nbsp;6, <i>Database components</i></a>.</p><p>Otherwise, you can as well deactivate the connection
									components and use <span class="bold"><strong>Dynamic
										settings</strong></span> of the component to specify the intended
									connection manually. In this case, make sure the connection name
									is unique and distinctive all over through the two Job levels.
									For more information about <span class="bold"><strong>Dynamic
										settings</strong></span>, see your studio user guide.</p></td></tr></table></div>
                        </td></tr><tr><td><p>&nbsp;</p>
                        </td><td valign="top"><p><span class="emphasis"><em>Host</em></span></p>
                        </td><td valign="top"><p>Database server IP address.</p>
                        </td></tr><tr><td><p>&nbsp;</p>
                        </td><td valign="top"><p><span class="emphasis"><em>Port</em></span></p>
                        </td><td valign="top"><p>Listening port number of DB server.</p>
                        </td></tr><tr><td><p>&nbsp;</p>
                        </td><td valign="top"><p><span class="emphasis"><em>Database</em></span></p>
                        </td><td valign="top"><p>Name of the database.</p>
                        </td></tr><tr><td><p>&nbsp;</p>
                        </td><td valign="top"><p><span class="emphasis"><em>Username</em></span> and
                                    <span class="emphasis"><em>Password</em></span></p>
                        </td><td valign="top"><p>DB user authentication data.</p>
                        </td></tr><tr><td><p>&nbsp;</p>
                        </td><td valign="top"><p><span class="emphasis"><em>Schema</em></span> and <span class="emphasis"><em>Edit
                                    Schema</em></span></p>
                        </td><td valign="top"><p>A schema is a row description, i.e., it defines
                                the number of fields to be processed and passed on to the next
                                component. The schema is either built-in or remotely stored in the
                                Repository. </p>
                        </td></tr><tr><td><p>&nbsp;</p>
                        </td><td><p>&nbsp;</p>
                        </td><td valign="top"><p><span class="bold"><strong>Built-in</strong></span>: You
                                create and store the schema locally for this component only. Related
                                topic: see <span class="bluebold">Talend Enterprise Studio</span>
                                <span class="bold"><strong>User Guide</strong></span>.</p>
                        </td></tr><tr><td><p>&nbsp;</p>
                        </td><td><p>&nbsp;</p>
                        </td><td valign="top"><p><span class="bold"><strong>Repository</strong></span>: You
                                have already created the schema and stored it in the Repository and
                                thus reuse it when needed. Related topic: see <span class="bluebold">Talend Enterprise Studio</span>
                                <span class="bold"><strong>User Guide</strong></span>.</p>
                        </td></tr><tr><td><p>&nbsp;</p>
                        </td><td valign="top"><p><span class="emphasis"><em>Table Name</em></span></p>
                        </td><td valign="top"><p>Enter the name of the table to be read.</p>
                        </td></tr><tr><td><p>&nbsp;</p>
                        </td><td valign="top"><p><span class="emphasis"><em>Where clause</em></span></p>
                        </td><td valign="top"><p>Enter a WHERE clause to set the criteria that the
                                rows must meet.</p><p> You can use the WHERE clause to select
                                specific rows from the table that match certain specified criteria
                                or conditions.</p>
                        </td></tr><tr><td><p>&nbsp;</p>
                        </td><td valign="top"><p><span class="emphasis"><em>Analyzed column</em></span></p>
                        </td><td valign="top"><p>Select from the schema list the column to analyze.
                            </p>
                        </td></tr><tr><td><p>&nbsp;</p>
                        </td><td valign="top"><p><span class="emphasis"><em>Custom pattern</em></span></p>
                        </td><td valign="top"><p>Select this check box to define manually your own
                                customized regular expression against which you want to check the DB
                                rows.</p>
                        </td></tr><tr><td><p>&nbsp;</p>
                        </td><td valign="top"><p><span class="emphasis"><em>Patterns list</em></span></p>
                        </td><td valign="top"><p>Select from the pattern list the pattern against
                                which you want to check the DB rows.</p>
                        </td></tr><tr><td valign="top"><p><span class="bold"><strong>Advanced
                                settings</strong></span></p>
                        </td><td valign="top"><p><span class="emphasis"><em>tStat</em></span><span class="emphasis"><em>Catcher</em></span>
                                <span class="emphasis"><em>Statistics</em></span></p>
                        </td><td valign="top"><p>Select this check box to collect log data at the
                                component level.</p>
                        </td></tr><tr><td valign="top"><p><span class="bold"><strong>Usage</strong></span></p>
                        </td><td colspan="2" valign="top"><p>This component can be
                                used as a start or intermediary step. It requires an output
                                flow.</p>
                        </td></tr><tr><td valign="top"><p><span class="bold"><strong>Limitation</strong></span></p>
                        </td><td colspan="2" valign="top"><p>n/a</p>
                        </td></tr></tbody></table></div></div><div class="section" title="Scenario: Reading email addresses from a DB table and extracting invalid rows"><div class="titlepage"><div><div><h3 class="title"><a name="Raa46471"></a>Scenario: Reading email addresses from a DB table and extracting invalid rows</h3></div></div></div><p>This Java scenario is a two-component Job created in
                <span class="bluebold">Talend Enterprise Studio</span>. In this Job, <span class="bold"><strong>tMySQLInvalidRows</strong></span> reads the email address column from a MySQL database
            table, checks the email column value against the given <span class="bluebold">Talend Enterprise Data Quality</span> email pattern and finally extracts the invalid rows and
            displays them on the console.</p><p>Below is the database table we use in this example, the
                <span class="emphasis"><em>Email</em></span> column contains some invalid data that should be
            corrected.</p><div class="mediaobject"><img src="../images/Use_Case_tMysqlInvalidRows.png"></div><p>In this scenario, we have already stored the schemas of
            the input table in the Repository. For more information about storing schema metadata in
            the <span class="bold"><strong>Repository</strong></span> tree view, see <span class="bluebold">Talend Enterprise Studio</span>
            <span class="bold"><strong>User Guide</strong></span>.</p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>In the <span class="bold"><strong>Repository</strong></span> tree view, expand in
                    succession <span class="bold"><strong>Metadata</strong></span> and the <span class="bold"><strong>DB Connections</strong></span> node where you have stored the input
                    schemas and drop the relevant connection onto the design workspace.</p><p> The <span class="bold"><strong>[Components]</strong></span> dialog box displays.</p></li></ul></div><div class="mediaobject"><img src="../images/Use_Case_tMysqlInvalidRows2.png"></div><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>Select <span class="bold"><strong>tMySQLInvalidRows </strong></span>from the list and
                    click <span class="bold"><strong>OK</strong></span> to close the dialog box.</p><p> The <span class="bold"><strong>tMySQLInvalidRows</strong></span> component displays on
                    the workspace. The MySQL table used in this scenario is called
                        <span class="emphasis"><em>employees</em></span>. It holds the employees&#8217; <span class="emphasis"><em>ID,
                        FirstName, Initial </em></span>and <span class="emphasis"><em>Email</em></span>.</p></li><li class="listitem"><p>Drop <span class="bold"><strong>tLogRow</strong></span> from the <span class="bold"><strong>Palette</strong></span> onto the design workspace.</p></li><li class="listitem"><p>Connect the two components together using the <span class="bold"><strong>Main</strong></span> link.</p></li></ul></div><div class="mediaobject"><img src="../images/Use_Case_tMysqlInvalidRows1.png"></div><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>.Double-click <span class="bold"><strong>tMySQLInvalid Rows</strong></span> to display
                    its <span class="bold"><strong>Basic settings</strong></span> view and define its
                    properties.</p></li></ul></div><div class="mediaobject"><img src="../images/Use_Case_tMysqlInvalidRows3.png"></div><p>All database connection fields are automatically filled
            in. If you do not define your input files in the Repository, fill in the details
            manually after selecting <span class="bold"><strong>Built-in</strong></span> in the <span class="bold"><strong>Property Type</strong></span> field</p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>In the <span class="bold"><strong>Analyzed column</strong></span> list, select the
                    column you want to analyze, <span class="emphasis"><em>Email </em></span>in this example.</p></li><li class="listitem"><p>In the <span class="bold"><strong>Patterns list</strong></span>, select the <span class="bluebold">Talend Enterprise Data Quality</span> database pattern against which you want
                    to check the <span class="emphasis"><em>Email</em></span> column, <span class="emphasis"><em>Email
                        Address</em></span> in this example.</p></li></ul></div><div class="note" title="Note" style="margin-left: 0.5in; margin-right: 0.5in;"><table border="0" summary="Note"><tr><td rowspan="2" align="center" valign="top" width="16pt"><img alt="[Note]" src="../images/note.png"></td><th align="left"></th></tr><tr><td align="left" valign="top"><p>If you select the <span class="bold"><strong>Custom pattern</strong></span> check box, you
                can customize the regular expression against which the data is to be checked.</p></td></tr></table></div><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>Double click <span class="bold"><strong>tLogRow</strong></span> to open its <span class="bold"><strong>Basic settings</strong></span> view and define its properties as
                    needed.</p></li><li class="listitem"><p>Save your Job and press <span class="bold"><strong>F6</strong></span> to execute
                    it.</p></li></ul></div><div class="mediaobject"><img src="../images/Use_Case_tMysqlInvalidRows4.png"></div><p>The <span class="bold"><strong>tMySQLInvalidRows</strong></span>
            component analyzed the <span class="emphasis"><em>Email</em></span> column in the MySQL table against the
            selected SQL pattern (<span class="emphasis"><em>Email Address</em></span>), and then it extracted all
            invalid data that should be corrected.</p></div></div></body></html>