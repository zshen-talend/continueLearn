<html><head>
      <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
   <title>tDotNETRow</title><meta name="generator" content="DocBook XSL-NS Stylesheets V1.76.1"><link rel="home" href="index.html" title="Talend Open Studio"><link rel="up" href="RaaDotNET.html" title="Chapitre&nbsp;8.&nbsp;Composants DotNET"><link rel="prev" href="tDotNETInstantiate.html" title="tDotNETInstantiate"><link rel="next" href="ch09.html" title="Chapitre&nbsp;9.&nbsp;Composants ESB"></head><body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF"><div lang="FR" class="section" title="tDotNETRow"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="tDotNETRow"></a>tDotNETRow</h2></div></div></div><div class="mediaobject"><img src="../images/tDotNetRow_icon32_white.png"></div><div class="section" title="Propri&eacute;t&eacute;s du tDotNETRow"><div class="titlepage"><div><div><h3 class="title"><a name="d0e187114"></a>Propri&eacute;t&eacute;s du tDotNETRow</h3></div></div></div><div class="informaltable"><table border="1"><colgroup><col class="c1"><col class="c2"><col class="c3"></colgroup><tbody><tr><td valign="top">
									<p>
										<span class="bold"><strong>Famille de composant</strong></span>
									</p>
								</td><td valign="top">
									<p>DotNET</p>
								</td><td valign="top">&nbsp;</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>Fonction</strong></span>
									</p>
								</td><td colspan="2" valign="top">
									<p>Le composant <span class="bold"><strong>tDotNETRow </strong></span>
										envoie des donn&eacute;es &agrave; partir de biblioth&egrave;ques et vers des
										biblioth&egrave;ques et des classes dans .NET ou d'autres fichiers
										DLL personnalis&eacute;s. </p>
								</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>Objectif</strong></span>
									</p>
								</td><td colspan="2" valign="top">
									<p>Le <span class="bold"><strong>tDotNETRow</strong></span> vous permet
										de faciliter la transformation de donn&eacute;es &agrave; l'aide de
										classes .NET built-in ou personnalis&eacute;es.</p>
								</td></tr><tr><td>
									<p>&nbsp;<span class="bold"><strong>Basic settings</strong></span></p>
								</td><td valign="top">
									<p><span class="emphasis"><em>Schema</em></span> et <span class="emphasis"><em>Edit
											schema</em></span></p>
								</td><td valign="top">
									<p>Un sch&eacute;ma est une description de lignes, i.e., il d&eacute;finit
										le nombre de champs qui sont trait&eacute;s et pass&eacute;s au composant
										suivant. Le sch&eacute;ma est soit local (<span class="bold"><strong>Built-in</strong></span>), soit distant (<span class="bold"><strong>Repository)</strong></span>.</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p><span class="bold"><strong>Built-in</strong></span>&nbsp;: Le sch&eacute;ma est cr&eacute;&eacute; et
										conserv&eacute; pour ce composant seulement. Voir &eacute;galement&nbsp;le
											<span class="bold"><strong>Guide utilisateur</strong></span> de <span class="bluebold">Talend Open Studio</span>.
									</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td>
									<p>&nbsp;</p>
								</td><td valign="top">
									<p><span class="bold"><strong>Repository&nbsp;</strong></span>: Le sch&eacute;ma existe
										d&eacute;j&agrave; et est stock&eacute; dans le <span class="bold"><strong>Repository</strong></span>. Ainsi, il peut &ecirc;tre r&eacute;utilis&eacute;.
										Voir &eacute;galement&nbsp;le <span class="bold"><strong>Guide utilisateur</strong></span> de <span class="bluebold">Talend Open Studio</span>.</p>
								</td></tr><tr><td>&nbsp;</td><td valign="top">
									<span class="emphasis"><em>Use a static method</em></span>
								</td><td valign="top">
									<p>Cochez cette case pour invoquer une m&eacute;thode statique dans
										.NET. Cela d&eacute;sactivera la case <span class="bold"><strong>Use an
											existing instance</strong></span>. </p>
								</td></tr><tr><td>&nbsp;</td><td valign="top">
									<span class="emphasis"><em>Propagate a data to output</em></span>
								</td><td valign="top">
									<p>Cochez cette case afin de propager des donn&eacute;es
										transform&eacute;es vers la sortie</p>
								</td></tr><tr><td>&nbsp;</td><td valign="top">
									<span class="emphasis"><em>Use an existing instance</em></span>
								</td><td valign="top">
									<p>Cochez cette case pour r&eacute;utiliser une instance existante
										d'un objet.NET dans la liste <span class="bold"><strong>Existing
											instance to use</strong></span>.</p>
									<p><span class="bold"><strong>Existing instance to use</strong></span>
										: S&eacute;lectionnez une instance existante d'objets .NET cr&eacute;&eacute;s
										par d'autres composants .NET de la liste.</p>
									<p>
										</p><div class="note" title="Note" style="margin-left: 0.5in; margin-right: 0.5in;"><table border="0" summary="Note"><tr><td rowspan="2" align="center" valign="top" width="16pt"><img alt="[Note]" src="../images/note.png"></td><th align="left"></th></tr><tr><td align="left" valign="top"><p>Cette case est d&eacute;sactiv&eacute;e si vous avez coch&eacute;
												<span class="bold"><strong>Use a static
												method</strong></span>. Cochez cette case d&eacute;sactivera
												les champs <span class="bold"><strong>Dll to
												load</strong></span>, <span class="bold"><strong>Fully
												qualified class name(i.e.
												ClassLibrary1.NameSpace2.Class1)</strong></span> et
												<span class="bold"><strong>Value(s) to pass to the
												constructor</strong></span>.</p></td></tr></table></div><p>
									</p>
								</td></tr><tr><td valign="top">&nbsp;</td><td valign="top">
									<p>
										<span class="emphasis"><em>Dll to load</em></span>
									</p>
								</td><td valign="top">Saisissez dans ce champ le chemin d'acc&egrave;s &agrave; une
									biblioth&egrave;que DLL contenant la (les) classe(s) qui vous
									int&eacute;resse(nt) ou saisissez le nom de l'Assembly ou cliquez sur
									le bouton <span class="bold"><strong>[...]</strong></span> afin de
									parcourir votre syst&egrave;me jusqu'au r&eacute;pertoire de votre
									biblioth&egrave;que. Par exemple, <span class="italic">System.Data,
										Version=2.0.0.0, Culture=neutral,
										PublicKeyToken=b77a5c561934e089</span> pour une Assembly
									OleDb.</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td>
									<p>&nbsp;<span class="emphasis"><em>Fully qualified class name(i.e.
											ClassLibrary1.NameSpace2.Class1)</em></span></p>
								</td><td valign="top">
									<p>Renseignez ce champ en saisissant le chemin complet de la
										classe (FQN).</p>
								</td></tr><tr><td>
									<p>&nbsp;</p>
								</td><td>
									<p>&nbsp;<span class="emphasis"><em>Method name</em></span></p>
								</td><td valign="top">
									<p>Renseignez ce champ en saisissant le nom de la m&eacute;thode &agrave;
										invoquer dans .NET.</p>
								</td></tr><tr><td>&nbsp;</td><td>
									<span class="emphasis"><em>Value(s) to pass to the constructor</em></span>
								</td><td valign="top">
									<p>Cliquez sur le
										bouton <span class="bold"><strong>[+]</strong></span> pour ajouter une
										ou plusieurs valeur(s) &agrave; passer au constructeur de l'objet.
										Ou, laissez vide ce tableau afin d'appeler un constructeur
										par d&eacute;faut pour l'objet.</p>
									<p>La/les valeur(s) valide(s) doi(ven)t &ecirc;tre les param&egrave;tres
										requis par la classe &agrave; utiliser.</p>
								</td></tr><tr><td>&nbsp;</td><td>
									<span class="emphasis"><em>Method Parameters</em></span>
								</td><td valign="top">
									<p>Cliquez sur le bouton <span class="bold"><strong>[+]</strong></span>
										pour ajouter une ou plusieurs ligne(s) de param&egrave;tres &agrave;
										passer &agrave; la m&eacute;thode.</p>
								</td></tr><tr><td>&nbsp;</td><td>
									<span class="emphasis"><em>Output value target column</em></span>
								</td><td valign="top">
									<p>Dans la liste, s&eacute;lectionnez une colonne de la lignes de
										sortie afin de lui attribuer une valeur.</p>
								</td></tr><tr><td>&nbsp;<span class="bold"><strong>Advanced settings</strong></span></td><td>
									<span class="emphasis"><em>Create a new instance at each row</em></span>
								</td><td valign="top">
									<p>Cochez cette case pour cr&eacute;er une nouvelle instance &agrave;
										chaque ligne qui passe dans le composant.</p>
								</td></tr><tr><td>&nbsp;</td><td>
									<span class="emphasis"><em>Method doesn't return a value</em></span>
								</td><td valign="top">
									<p>Cochez cette case afin d'invoquer une m&eacute;thode sans
										retourner de valeur comme r&eacute;sultat du traitement.</p>
								</td></tr><tr><td>&nbsp;</td><td>
									<span class="emphasis"><em>Returns an instance of a .NET Object</em></span>
								</td><td valign="top">
									<p>Cochez cette case pour retourner une instance d'un objet
										.NET comme r&eacute;sultat d'une m&eacute;thode invoqu&eacute;e.</p>
								</td></tr><tr><td>&nbsp;</td><td>
									<span class="emphasis"><em>Store the returned value for later use</em></span>
								</td><td valign="top">
									<p>Cochez cette case afin de stocker la valeur retourn&eacute;e
										d'une m&eacute;thode pour une utilisation ult&eacute;rieure dans un autre
										composant <span class="bold"><strong>tDotNETRow</strong></span>.</p>
								</td></tr><tr><td>&nbsp;</td><td valign="top">
									<p>
										<span class="emphasis"><em>tStatCatcher Statistics</em></span>
									</p>
								</td><td valign="top">
									<p>Cochez cette case pour collecter les donn&eacute;es de log au
										niveau du composant.</p>
								</td></tr><tr><td>&nbsp;</td><td valign="top">
									<span class="emphasis"><em>Enable parallel execution</em></span>
								</td><td valign="top">
									<p>Cochez cette case permet de traiter plusieurs flux de
										donn&eacute;es simultan&eacute;ment. Cela permet de traiter les donn&eacute;es
										plus rapidement.</p>
									<p> Dans le champ <span class="bold"><strong>Number of parallel
											executions</strong></span>, vous pouvez&nbsp;:</p>
									<p>- Saisir le nombre d&#8217;ex&eacute;cutions parall&egrave;les d&eacute;sir&eacute;</p>
									<p>- Appuyer sur <span class="bold"><strong>Ctrl+Espace
										</strong></span>et s&eacute;lectionner la variable de contexte dans la
										liste.</p>
									<p>Pour plus d&#8217;informations, consultez le <span class="bold"><strong>Guide utilisateur</strong></span> de <span class="bluebold">Talend Open Studio</span>.</p>
									<div class="warning" title="Avertissement" style="margin-left: 0.5in; margin-right: 0.5in;"><table border="0" summary="Warning"><tr><td rowspan="2" align="center" valign="top" width="16pt"><img alt="[Avertissement]" src="../images/warning.png"></td><th align="left"></th></tr><tr><td align="left" valign="top"><p>
											<span class="emphasis"><em>Les actions sur la table (</em></span>
											<span class="bold"><strong>Action on table</strong></span>
											<span class="emphasis"><em>) ne sont pas disponibles avec la fonction de
												parall&eacute;lisation. Ainsi, pour cr&eacute;er une table, vous
												devez utiliser un composant </em></span>
											<span class="bold"><strong>tCreateTable</strong></span>
											<span class="emphasis"><em>.</em></span>
										</p></td></tr></table></div>
									<div class="warning" title="Avertissement" style="margin-left: 0.5in; margin-right: 0.5in;"><table border="0" summary="Warning"><tr><td rowspan="2" align="center" valign="top" width="16pt"><img alt="[Avertissement]" src="../images/warning.png"></td><th align="left"></th></tr><tr><td align="left" valign="top"><p>
											<span class="emphasis"><em>Lorsque l&#8217;ex&eacute;cution parall&egrave;le est activ&eacute;e, il
												n&#8217;est pas possible d&#8217;utiliser les variables globales
												pour retrouver les valeurs de retour dans un
												sous-job.</em></span>
										</p></td></tr></table></div>
								</td></tr><tr><td valign="top">
									<p>
										<span class="bold"><strong>Utilisation</strong></span>
									</p>
								</td><td colspan="2" valign="top">
									<p>Ce composant est utilis&eacute; pour communiquer avec des objets
										.NET. </p>
									<p>Pour utiliser ce composant, vous devez d'abord installer
										les fichiers DLLs d'ex&eacute;cution, par exemple <span class="italic">janet-win32.dll</span>, sous Windows
										32 bits et <span class="italic">janet-win64.dll</span> sous Windows 64 bits, dans
										le package redistribuable Microsoft Visual C++, afin
										d'&eacute;viter les erreurs telles que <span class="italic">UnsatisfiedLinkError</span> sur les DLL d&eacute;pendants. </p>
									<p>Assurez-vous que le DLL d'ex&eacute;cution et tous les autres DLL
										dont d&eacute;pend le DLL &agrave; appeler sont enti&egrave;rement install&eacute;s et
										que leurs versions sont en ad&eacute;quation.</p><div class="note" title="Note" style="margin-left: 0.5in; margin-right: 0.5in;"><table border="0" summary="Note"><tr><td rowspan="2" align="center" valign="top" width="16pt"><img alt="[Note]" src="../images/note.png"></td><th align="left"></th></tr><tr><td align="left" valign="top"><p>Les DLLs d'ex&eacute;cution requis peuvent &ecirc;tre install&eacute;s
												dans le dossier <span class="italic">System32</span> ou dans le dossier <span class="italic">bin</span> du JRE &agrave;
												utiliser.</p><p>Si vous devez exporter un Job utilisant ce
												composant pour l'ex&eacute;cuter hors du Studio, vous devez
												sp&eacute;cifier le conteneur d'ex&eacute;cution souhait&eacute; en
												configurant l'argument <span class="italic">-Djava.library.path</span>.</p></td></tr></table></div>
								</td></tr></tbody></table></div></div><div class="section" title="Sc&eacute;nario : Utiliser .NET dans Talend"><div class="titlepage"><div><div><h3 class="title"><a name="RaaDotNET-DotNETRow-Sce1"></a>Sc&eacute;nario : Utiliser .NET dans Talend</h3></div></div></div><p>Ce sc&eacute;nario d&eacute;crit un Job &agrave; trois composants utilisant une biblioth&egrave;que DLL
					contenant une classe appel&eacute;e <span class="italic">Test1.Class1</span>. On
					invoque une m&eacute;thode de cette classe qui traite la valeur et &eacute;crit les donn&eacute;es
					dans la console.</p><div class="mediaobject" align="center"><img src="../images/use_case-tdotnetrow1.png" align="middle"></div><div class="section" title="Pr&eacute;requis"><div class="titlepage"><div><div><h4 class="title"><a name="d0e187604"></a>Pr&eacute;requis</h4></div></div></div><p>Avant de reproduire ce sc&eacute;nario, vous devez d'abord construire votre
						environnement d'ex&eacute;cution.</p><div class="itemizedlist"><ul class="itemizedlist" type="disc"><li class="listitem"><p>Cr&eacute;ez le DLL &agrave; charger par le <span class="bold"><strong>tDotNETInstantiate</strong></span></p><p>Cette classe d'exemple construite dans .NET se pr&eacute;sente comme suit
								:</p><pre class="programlisting">using System;<span></span>
using System.Collections.Generic;<span></span>
using System.Text;<span></span>


namespace Test1<span></span>
{<span></span>
    public class Class1<span></span>
    {<span></span>
        string s = null;<span></span>
        public Class1(string s)<span></span>
        {<span></span>
            this.s = s;<span></span>
        }<span></span>

        public string getValue()<span></span>
        {<span></span>
            return "Return Value from Class1: " + s;<span></span>
        }<span></span>

    }<span></span>
    }</pre><p>Cette classe lit la valeur d'entr&eacute;e et ajoute le texte <span class="italic">Return Value from Class1:</span> devant cette
								valeur. La classe est compil&eacute;e &agrave; l'aide du dernier .NET.</p></li><li class="listitem"><p>Installez le fichier DLL d'ex&eacute;cution &agrave; partir du dernier .NET.
								Dans ce sc&eacute;nario, utilisez <span class="italic">janet-win32.dll</span> sous Windows 32 bits et placez-le
								dans le dossier <span class="italic">System32</span>.</p><p>Le DLL d'ex&eacute;cution est compatible avec le DLL &agrave; charger.</p></li></ul></div></div><div class="section" title="Relier les composants"><div class="titlepage"><div><div><h4 class="title"><a name="d0e187669"></a>Relier les composants</h4></div></div></div><div class="procedure"><ol class="procedure" type="1"><li class="step" title="&Eacute;tape 1"><p>D&eacute;posez les composants suivants de la <span class="bold"><strong>Palette</strong></span> dans l'espace de mod&eacute;lisation graphique :
									<span class="bold"><strong>tDotNETInstantiate</strong></span>, <span class="bold"><strong>tDotNETRow</strong></span> et <span class="bold"><strong>tLogRow</strong></span>.</p></li><li class="step" title="&Eacute;tape 2"><p>Connectez le <span class="bold"><strong>tDotNETInstantiate</strong></span>
								au <span class="bold"><strong>tDotNETRow</strong></span> &agrave; l'aide d'un lien
									<span class="bold"><strong>Trigger</strong></span> &gt; <span class="bold"><strong>OnSubjobOk</strong></span>.</p></li><li class="step" title="&Eacute;tape 3"><p>Reliez le <span class="bold"><strong>tDotNETRow</strong></span> au <span class="bold"><strong>tLogRow</strong></span> &agrave; l'aide d'un lien <span class="bold"><strong>Row</strong></span> &gt; <span class="bold"><strong>Main</strong></span>.</p></li></ol></div></div><div class="section" title="Configurer le tDotNETInstantiate"><div class="titlepage"><div><div><h4 class="title"><a name="d0e187718"></a>Configurer le tDotNETInstantiate</h4></div></div></div><div class="procedure"><ol class="procedure" type="1"><li class="step" title="&Eacute;tape 1"><p>Double-cliquez sur le <span class="bold"><strong>tDotNETInstantiate</strong></span> pour afficher sa vue <span class="bold"><strong>Basic settings</strong></span> et d&eacute;finir ses propri&eacute;t&eacute;s
								de base.</p><div class="mediaobject" align="center"><img src="../images/use_case-tdotnetrow2.png" align="middle"></div></li><li class="step" title="&Eacute;tape 2"><p>Cliquez sur le bouton <span class="bold"><strong>[...]</strong></span> &agrave;
								c&ocirc;t&eacute; du champ <span class="bold"><strong>Dll to load</strong></span> et
								parcourez votre syst&egrave;me jusqu'au fichier dll &agrave; charger. Vous pouvez
								&eacute;galement renseigner le champ avec une Assembly. Dans cet exemple,
								utilisez :</p><p>
								<span class="emphasis"><em>"C:/Program
									Files/ClassLibrary1/bin/Debug/ClassLibrary1.dll""</em></span>
							</p></li><li class="step" title="&Eacute;tape 3"><p>Dans le champ <span class="bold"><strong>Fully qualified class
									name</strong></span>, saisissez un nom de classe valide &agrave; utiliser.
								Dans cet exemple, saisissez :</p><p>
								<span class="emphasis"><em>"Test1.Class1"</em></span>
							</p></li><li class="step" title="&Eacute;tape 4"><p>Cliquez sur le bouton <span class="bold"><strong>[+]</strong></span> sous la
								table <span class="bold"><strong>Value(s) to pass to the
									constructor</strong></span> afin d'ajouter une ligne pour la valeur &agrave;
								passer au constructeur.</p><p>Dans cet exemple, saisissez :</p><p>
								<code class="code">"Hello world"</code>
							</p></li></ol></div></div><div class="section" title="Configurer le composant tDotNETRow"><div class="titlepage"><div><div><h4 class="title"><a name="d0e187775"></a>Configurer le composant tDotNETRow</h4></div></div></div><div class="procedure"><ol class="procedure" type="1"><li class="step" title="&Eacute;tape 1"><p>Double-cliquez sur le composant <span class="bold"><strong>tDotNETRow</strong></span> afin d'afficher sa vue <span class="bold"><strong>Basic settings</strong></span> et d&eacute;finir ses propri&eacute;t&eacute;s
								de base. </p><div class="mediaobject" align="center"><img src="../images/use_case-tdotnetrow3.png" align="middle"></div></li><li class="step" title="&Eacute;tape 2"><p>Cochez la case <span class="bold"><strong>Propagate data to
									output</strong></span>.</p></li><li class="step" title="&Eacute;tape 3"><p>Cochez la case <span class="bold"><strong>Use an existing
									instance</strong></span> et s&eacute;lectionnez <span class="bold"><strong>tDotNETInstantiate_1</strong></span> dans la liste <span class="bold"><strong>Existing instance to use</strong></span>.</p></li><li class="step" title="&Eacute;tape 4"><p>Renseignez le champ <span class="bold"><strong>Method Name</strong></span>
								avec le nom de la m&eacute;thode &agrave; utiliser. Dans cet exemple, utilisez
									<span class="emphasis"><em>"getValue"</em></span>.</p></li><li class="step" title="&Eacute;tape 5"><p>Cliquez sur le bouton <span class="bold"><strong>[...]</strong></span> &agrave;
								c&ocirc;t&eacute; du champ <span class="bold"><strong>Edit schema</strong></span> pour
								ajouter une colonne au sch&eacute;ma.</p><div class="mediaobject" align="center"><img src="../images/use_case-tdotnetrow4.png" align="middle"></div><p>Cliquez sur le bouton <span class="bold"><strong>[+]</strong></span> afin
								d'ajouter une colonne au sch&eacute;ma et cliquez sur <span class="bold"><strong>OK</strong></span> pour sauvegarder les modifications.</p></li><li class="step" title="&Eacute;tape 6"><p>S&eacute;lectionnez <span class="bold"><strong>newColumn</strong></span> dans la
								liste <span class="bold"><strong> Output value target
								column</strong></span>.</p></li><li class="step" title="&Eacute;tape 7"><p>Laissez les autres param&egrave;tres tels qu'ils sont.</p></li></ol></div></div><div class="section" title="Configurer le tLogRow"><div class="titlepage"><div><div><h4 class="title"><a name="d0e187850"></a>Configurer le tLogRow</h4></div></div></div><div class="procedure"><ol class="procedure" type="1"><li class="step" title="&Eacute;tape 1"><p>Double-cliquez sur le <span class="bold"><strong>tLogRow</strong></span>
								afin d'afficher sa vue <span class="bold"><strong>Basic
									settings</strong></span> et d&eacute;finir ses propri&eacute;t&eacute;s de base. </p><div class="mediaobject" align="center"><img src="../images/use_case-tdotnetrow5.png" align="middle"></div></li><li class="step" title="&Eacute;tape 2"><p>Cliquez sur le bouton <span class="bold"><strong>Sync
									columns</strong></span> afin de r&eacute;cup&eacute;rer le sch&eacute;ma d&eacute;fini dans le
								composant pr&eacute;c&eacute;dent.</p></li><li class="step" title="&Eacute;tape 3"><p>S&eacute;lectionnez <span class="bold"><strong>Table</strong></span> dans la zone
									<span class="bold"><strong>Mode</strong></span>.</p></li></ol></div><p>Sauvegardez votre Job et appuyez sur la touche <span class="bold"><strong>F6</strong></span> pour l'ex&eacute;cuter.</p><div class="mediaobject" align="center"><img src="../images/use_case-tdotnetrow-result.png" align="middle"></div><p>Vous pouvez constater, dans les r&eacute;sultats, que le texte <code class="code">Return Value
							from Class1</code> est ajout&eacute; devant la valeur r&eacute;cup&eacute;r&eacute;e <code class="code">Hello
							world</code>.</p></div></div></div></body></html>